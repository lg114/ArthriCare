import { openBlock as p, createElementBlock as I, createElementVNode as oe, reactive as Rt, computed as L, unref as M, ref as H, watch as ut, toRef as Ct, onMounted as We, nextTick as at, defineComponent as je, renderSlot as K, createCommentVNode as A, normalizeClass as he, withKeys as de, createBlock as me, withModifiers as nt, normalizeStyle as ot, normalizeProps as Re, mergeProps as Pe, Fragment as ye, createTextVNode as Ze, toDisplayString as Oe, renderList as Ce, createVNode as gt, Transition as wt, withCtx as ie, onBeforeUpdate as oa, onUnmounted as hn, withDirectives as Et, vShow as Lt, createSlots as Le, guardReactiveProps as xe, resolveDynamicComponent as xn, useSlots as pn, getCurrentScope as sa, onScopeDispose as ua, isRef as Tn, Teleport as ia } from "vue";
import { isBefore as Nt, isEqual as ft, isAfter as _t, set as Ne, setHours as zn, setMinutes as jn, setSeconds as Kn, setMilliseconds as kn, getHours as et, getMinutes as tt, getSeconds as kt, parse as dn, isValid as Ft, isDate as da, format as St, getMonth as pe, getDay as ca, getYear as we, parseISO as fa, startOfWeek as Sn, endOfWeek as va, setMonth as Ut, setYear as st, addDays as vt, add as Gn, addMonths as mt, subMonths as At, getWeek as ma, getISOWeek as ya, differenceInCalendarDays as ga, eachDayOfInterval as An, addYears as ha, subYears as pa, sub as ka } from "date-fns";
function xt() {
  return p(), I(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      oe("path", {
        d: "M29.333 8c0-2.208-1.792-4-4-4h-18.667c-2.208 0-4 1.792-4 4v18.667c0 2.208 1.792 4 4 4h18.667c2.208 0 4-1.792 4-4v-18.667zM26.667 8v18.667c0 0.736-0.597 1.333-1.333 1.333 0 0-18.667 0-18.667 0-0.736 0-1.333-0.597-1.333-1.333 0 0 0-18.667 0-18.667 0-0.736 0.597-1.333 1.333-1.333 0 0 18.667 0 18.667 0 0.736 0 1.333 0.597 1.333 1.333z"
      }),
      oe("path", {
        d: "M20 2.667v5.333c0 0.736 0.597 1.333 1.333 1.333s1.333-0.597 1.333-1.333v-5.333c0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      }),
      oe("path", {
        d: "M9.333 2.667v5.333c0 0.736 0.597 1.333 1.333 1.333s1.333-0.597 1.333-1.333v-5.333c0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      }),
      oe("path", {
        d: "M4 14.667h24c0.736 0 1.333-0.597 1.333-1.333s-0.597-1.333-1.333-1.333h-24c-0.736 0-1.333 0.597-1.333 1.333s0.597 1.333 1.333 1.333z"
      })
    ]
  );
}
function wa() {
  return p(), I(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      oe("path", {
        d: "M23.057 7.057l-16 16c-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0l16-16c0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0z"
      }),
      oe("path", {
        d: "M7.057 8.943l16 16c0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885l-16-16c-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885z"
      })
    ]
  );
}
function Pn() {
  return p(), I(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      oe("path", {
        d: "M20.943 23.057l-7.057-7.057c0 0 7.057-7.057 7.057-7.057 0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0l-8 8c-0.521 0.521-0.521 1.365 0 1.885l8 8c0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885z"
      })
    ]
  );
}
function Cn() {
  return p(), I(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      oe("path", {
        d: "M12.943 24.943l8-8c0.521-0.521 0.521-1.365 0-1.885l-8-8c-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885l7.057 7.057c0 0-7.057 7.057-7.057 7.057-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0z"
      })
    ]
  );
}
function Zn() {
  return p(), I(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      oe("path", {
        d: "M16 1.333c-8.095 0-14.667 6.572-14.667 14.667s6.572 14.667 14.667 14.667c8.095 0 14.667-6.572 14.667-14.667s-6.572-14.667-14.667-14.667zM16 4c6.623 0 12 5.377 12 12s-5.377 12-12 12c-6.623 0-12-5.377-12-12s5.377-12 12-12z"
      }),
      oe("path", {
        d: "M14.667 8v8c0 0.505 0.285 0.967 0.737 1.193l5.333 2.667c0.658 0.329 1.46 0.062 1.789-0.596s0.062-1.46-0.596-1.789l-4.596-2.298c0 0 0-7.176 0-7.176 0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      })
    ]
  );
}
function qn() {
  return p(), I(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      oe("path", {
        d: "M24.943 19.057l-8-8c-0.521-0.521-1.365-0.521-1.885 0l-8 8c-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0l7.057-7.057c0 0 7.057 7.057 7.057 7.057 0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885z"
      })
    ]
  );
}
function Xn() {
  return p(), I(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      oe("path", {
        d: "M7.057 12.943l8 8c0.521 0.521 1.365 0.521 1.885 0l8-8c0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0l-7.057 7.057c0 0-7.057-7.057-7.057-7.057-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885z"
      })
    ]
  );
}
const Nn = (e, n, a, t, u) => {
  const c = dn(e, n.slice(0, e.length), /* @__PURE__ */ new Date());
  return Ft(c) && da(c) ? t || u ? c : Ne(c, {
    hours: +a.hours,
    minutes: +(a == null ? void 0 : a.minutes),
    seconds: +(a == null ? void 0 : a.seconds),
    milliseconds: 0
  }) : null;
}, ba = (e, n, a, t, u) => {
  const c = Array.isArray(a) ? a[0] : a;
  if (typeof n == "string")
    return Nn(e, n, c, t, u);
  if (Array.isArray(n)) {
    let y = null;
    for (const N of n)
      if (y = Nn(e, N, c, t, u), y)
        break;
    return y;
  }
  return typeof n == "function" ? n(e) : null;
}, T = (e) => e ? new Date(e) : /* @__PURE__ */ new Date(), Da = (e, n, a) => {
  if (n) {
    const u = (e.getMonth() + 1).toString().padStart(2, "0"), c = e.getDate().toString().padStart(2, "0"), y = e.getHours().toString().padStart(2, "0"), N = e.getMinutes().toString().padStart(2, "0"), V = a ? e.getSeconds().toString().padStart(2, "0") : "00";
    return `${e.getFullYear()}-${u}-${c}T${y}:${N}:${V}.000Z`;
  }
  const t = Date.UTC(
    e.getUTCFullYear(),
    e.getUTCMonth(),
    e.getUTCDate(),
    e.getUTCHours(),
    e.getUTCMinutes(),
    e.getUTCSeconds()
  );
  return new Date(t).toISOString();
}, ze = (e) => {
  let n = T(JSON.parse(JSON.stringify(e)));
  return n = zn(n, 0), n = jn(n, 0), n = Kn(n, 0), n = kn(n, 0), n;
}, Ue = (e, n, a, t) => {
  let u = e ? T(e) : T();
  return (n || n === 0) && (u = zn(u, +n)), (a || a === 0) && (u = jn(u, +a)), (t || t === 0) && (u = Kn(u, +t)), kn(u, 0);
}, Ie = (e, n) => !e || !n ? !1 : Nt(ze(e), ze(n)), ge = (e, n) => !e || !n ? !1 : ft(ze(e), ze(n)), Ve = (e, n) => !e || !n ? !1 : _t(ze(e), ze(n)), Jn = (e, n, a) => e && e[0] && e[1] ? Ve(a, e[0]) && Ie(a, e[1]) : e && e[0] && n ? Ve(a, e[0]) && Ie(a, n) || Ie(a, e[0]) && Ve(a, n) : !1, Mt = (e) => {
  const n = Ne(new Date(e), { date: 1 });
  return ze(n);
}, Jt = (e, n, a) => n && (a || a === 0) ? Object.fromEntries(
  ["hours", "minutes", "seconds"].map((t) => t === n ? [t, a] : [t, isNaN(+e[t]) ? void 0 : +e[t]])
) : {
  hours: isNaN(+e.hours) ? void 0 : +e.hours,
  minutes: isNaN(+e.minutes) ? void 0 : +e.minutes,
  seconds: isNaN(+e.seconds) ? void 0 : +e.seconds
}, Yt = (e) => ({
  hours: et(e),
  minutes: tt(e),
  seconds: kt(e)
}), Tt = Rt({
  menuFocused: !1,
  shiftKeyInMenu: !1
}), Qn = () => {
  const e = (t) => {
    Tt.menuFocused = t;
  }, n = (t) => {
    Tt.shiftKeyInMenu !== t && (Tt.shiftKeyInMenu = t);
  };
  return {
    control: L(() => ({ shiftKeyInMenu: Tt.shiftKeyInMenu, menuFocused: Tt.menuFocused })),
    setMenuFocused: e,
    setShiftKey: n
  };
};
function wn(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var ea = { exports: {} };
(function(e) {
  function n(a) {
    return a && a.__esModule ? a : {
      default: a
    };
  }
  e.exports = n, e.exports.__esModule = !0, e.exports.default = e.exports;
})(ea);
var $a = ea.exports, cn = { exports: {} };
(function(e, n) {
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = a;
  function a(t) {
    if (t === null || t === !0 || t === !1)
      return NaN;
    var u = Number(t);
    return isNaN(u) ? u : u < 0 ? Math.ceil(u) : Math.floor(u);
  }
  e.exports = n.default;
})(cn, cn.exports);
var Ma = cn.exports;
const Ta = /* @__PURE__ */ wn(Ma);
var fn = { exports: {} };
(function(e, n) {
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = a;
  function a(t) {
    var u = new Date(Date.UTC(t.getFullYear(), t.getMonth(), t.getDate(), t.getHours(), t.getMinutes(), t.getSeconds(), t.getMilliseconds()));
    return u.setUTCFullYear(t.getFullYear()), t.getTime() - u.getTime();
  }
  e.exports = n.default;
})(fn, fn.exports);
var Sa = fn.exports;
const _n = /* @__PURE__ */ wn(Sa);
function Aa(e, n) {
  var a = _a(n);
  return a.formatToParts ? Ca(a, e) : Na(a, e);
}
var Pa = {
  year: 0,
  month: 1,
  day: 2,
  hour: 3,
  minute: 4,
  second: 5
};
function Ca(e, n) {
  try {
    for (var a = e.formatToParts(n), t = [], u = 0; u < a.length; u++) {
      var c = Pa[a[u].type];
      c >= 0 && (t[c] = parseInt(a[u].value, 10));
    }
    return t;
  } catch (y) {
    if (y instanceof RangeError)
      return [NaN];
    throw y;
  }
}
function Na(e, n) {
  var a = e.format(n).replace(/\u200E/g, ""), t = /(\d+)\/(\d+)\/(\d+),? (\d+):(\d+):(\d+)/.exec(a);
  return [t[3], t[1], t[2], t[4], t[5], t[6]];
}
var Qt = {};
function _a(e) {
  if (!Qt[e]) {
    var n = new Intl.DateTimeFormat("en-US", {
      hour12: !1,
      timeZone: "America/New_York",
      year: "numeric",
      month: "numeric",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    }).format(/* @__PURE__ */ new Date("2014-06-25T04:00:00.123Z")), a = n === "06/25/2014, 00:00:00" || n === "‎06‎/‎25‎/‎2014‎ ‎00‎:‎00‎:‎00";
    Qt[e] = a ? new Intl.DateTimeFormat("en-US", {
      hour12: !1,
      timeZone: e,
      year: "numeric",
      month: "numeric",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    }) : new Intl.DateTimeFormat("en-US", {
      hourCycle: "h23",
      timeZone: e,
      year: "numeric",
      month: "numeric",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    });
  }
  return Qt[e];
}
function bn(e, n, a, t, u, c, y) {
  var N = /* @__PURE__ */ new Date(0);
  return N.setUTCFullYear(e, n, a), N.setUTCHours(t, u, c, y), N;
}
var Rn = 36e5, Ra = 6e4, en = {
  timezone: /([Z+-].*)$/,
  timezoneZ: /^(Z)$/,
  timezoneHH: /^([+-]\d{2})$/,
  timezoneHHMM: /^([+-]\d{2}):?(\d{2})$/
};
function Dn(e, n, a) {
  var t, u;
  if (!e || (t = en.timezoneZ.exec(e), t))
    return 0;
  var c;
  if (t = en.timezoneHH.exec(e), t)
    return c = parseInt(t[1], 10), On(c) ? -(c * Rn) : NaN;
  if (t = en.timezoneHHMM.exec(e), t) {
    c = parseInt(t[1], 10);
    var y = parseInt(t[2], 10);
    return On(c, y) ? (u = Math.abs(c) * Rn + y * Ra, c > 0 ? -u : u) : NaN;
  }
  if (Ba(e)) {
    n = new Date(n || Date.now());
    var N = a ? n : Oa(n), V = vn(N, e), P = a ? V : Ia(n, V, e);
    return -P;
  }
  return NaN;
}
function Oa(e) {
  return bn(
    e.getFullYear(),
    e.getMonth(),
    e.getDate(),
    e.getHours(),
    e.getMinutes(),
    e.getSeconds(),
    e.getMilliseconds()
  );
}
function vn(e, n) {
  var a = Aa(e, n), t = bn(
    a[0],
    a[1] - 1,
    a[2],
    a[3] % 24,
    a[4],
    a[5],
    0
  ).getTime(), u = e.getTime(), c = u % 1e3;
  return u -= c >= 0 ? c : 1e3 + c, t - u;
}
function Ia(e, n, a) {
  var t = e.getTime(), u = t - n, c = vn(new Date(u), a);
  if (n === c)
    return n;
  u -= c - n;
  var y = vn(new Date(u), a);
  return c === y ? c : Math.max(c, y);
}
function On(e, n) {
  return -23 <= e && e <= 23 && (n == null || 0 <= n && n <= 59);
}
var In = {};
function Ba(e) {
  if (In[e])
    return !0;
  try {
    return new Intl.DateTimeFormat(void 0, { timeZone: e }), In[e] = !0, !0;
  } catch {
    return !1;
  }
}
var Ya = /(Z|[+-]\d{2}(?::?\d{2})?| UTC| [a-zA-Z]+\/[a-zA-Z_]+(?:\/[a-zA-Z_]+)?)$/;
const ta = Ya;
var tn = 36e5, Bn = 6e4, Va = 2, Ye = {
  dateTimePattern: /^([0-9W+-]+)(T| )(.*)/,
  datePattern: /^([0-9W+-]+)(.*)/,
  plainTime: /:/,
  // year tokens
  YY: /^(\d{2})$/,
  YYY: [
    /^([+-]\d{2})$/,
    // 0 additional digits
    /^([+-]\d{3})$/,
    // 1 additional digit
    /^([+-]\d{4})$/
    // 2 additional digits
  ],
  YYYY: /^(\d{4})/,
  YYYYY: [
    /^([+-]\d{4})/,
    // 0 additional digits
    /^([+-]\d{5})/,
    // 1 additional digit
    /^([+-]\d{6})/
    // 2 additional digits
  ],
  // date tokens
  MM: /^-(\d{2})$/,
  DDD: /^-?(\d{3})$/,
  MMDD: /^-?(\d{2})-?(\d{2})$/,
  Www: /^-?W(\d{2})$/,
  WwwD: /^-?W(\d{2})-?(\d{1})$/,
  HH: /^(\d{2}([.,]\d*)?)$/,
  HHMM: /^(\d{2}):?(\d{2}([.,]\d*)?)$/,
  HHMMSS: /^(\d{2}):?(\d{2}):?(\d{2}([.,]\d*)?)$/,
  // time zone tokens (to identify the presence of a tz)
  timeZone: ta
};
function mn(e, n) {
  if (arguments.length < 1)
    throw new TypeError("1 argument required, but only " + arguments.length + " present");
  if (e === null)
    return /* @__PURE__ */ new Date(NaN);
  var a = n || {}, t = a.additionalDigits == null ? Va : Ta(a.additionalDigits);
  if (t !== 2 && t !== 1 && t !== 0)
    throw new RangeError("additionalDigits must be 0, 1 or 2");
  if (e instanceof Date || typeof e == "object" && Object.prototype.toString.call(e) === "[object Date]")
    return new Date(e.getTime());
  if (typeof e == "number" || Object.prototype.toString.call(e) === "[object Number]")
    return new Date(e);
  if (!(typeof e == "string" || Object.prototype.toString.call(e) === "[object String]"))
    return /* @__PURE__ */ new Date(NaN);
  var u = Ea(e), c = La(u.date, t), y = c.year, N = c.restDateString, V = Fa(N, y);
  if (isNaN(V))
    return /* @__PURE__ */ new Date(NaN);
  if (V) {
    var P = V.getTime(), F = 0, C;
    if (u.time && (F = Ua(u.time), isNaN(F)))
      return /* @__PURE__ */ new Date(NaN);
    if (u.timeZone || a.timeZone) {
      if (C = Dn(u.timeZone || a.timeZone, new Date(P + F)), isNaN(C))
        return /* @__PURE__ */ new Date(NaN);
    } else
      C = _n(new Date(P + F)), C = _n(new Date(P + F + C));
    return new Date(P + F + C);
  } else
    return /* @__PURE__ */ new Date(NaN);
}
function Ea(e) {
  var n = {}, a = Ye.dateTimePattern.exec(e), t;
  if (a ? (n.date = a[1], t = a[3]) : (a = Ye.datePattern.exec(e), a ? (n.date = a[1], t = a[2]) : (n.date = null, t = e)), t) {
    var u = Ye.timeZone.exec(t);
    u ? (n.time = t.replace(u[1], ""), n.timeZone = u[1].trim()) : n.time = t;
  }
  return n;
}
function La(e, n) {
  var a = Ye.YYY[n], t = Ye.YYYYY[n], u;
  if (u = Ye.YYYY.exec(e) || t.exec(e), u) {
    var c = u[1];
    return {
      year: parseInt(c, 10),
      restDateString: e.slice(c.length)
    };
  }
  if (u = Ye.YY.exec(e) || a.exec(e), u) {
    var y = u[1];
    return {
      year: parseInt(y, 10) * 100,
      restDateString: e.slice(y.length)
    };
  }
  return {
    year: null
  };
}
function Fa(e, n) {
  if (n === null)
    return null;
  var a, t, u, c;
  if (e.length === 0)
    return t = /* @__PURE__ */ new Date(0), t.setUTCFullYear(n), t;
  if (a = Ye.MM.exec(e), a)
    return t = /* @__PURE__ */ new Date(0), u = parseInt(a[1], 10) - 1, Vn(n, u) ? (t.setUTCFullYear(n, u), t) : /* @__PURE__ */ new Date(NaN);
  if (a = Ye.DDD.exec(e), a) {
    t = /* @__PURE__ */ new Date(0);
    var y = parseInt(a[1], 10);
    return xa(n, y) ? (t.setUTCFullYear(n, 0, y), t) : /* @__PURE__ */ new Date(NaN);
  }
  if (a = Ye.MMDD.exec(e), a) {
    t = /* @__PURE__ */ new Date(0), u = parseInt(a[1], 10) - 1;
    var N = parseInt(a[2], 10);
    return Vn(n, u, N) ? (t.setUTCFullYear(n, u, N), t) : /* @__PURE__ */ new Date(NaN);
  }
  if (a = Ye.Www.exec(e), a)
    return c = parseInt(a[1], 10) - 1, En(n, c) ? Yn(n, c) : /* @__PURE__ */ new Date(NaN);
  if (a = Ye.WwwD.exec(e), a) {
    c = parseInt(a[1], 10) - 1;
    var V = parseInt(a[2], 10) - 1;
    return En(n, c, V) ? Yn(n, c, V) : /* @__PURE__ */ new Date(NaN);
  }
  return null;
}
function Ua(e) {
  var n, a, t;
  if (n = Ye.HH.exec(e), n)
    return a = parseFloat(n[1].replace(",", ".")), nn(a) ? a % 24 * tn : NaN;
  if (n = Ye.HHMM.exec(e), n)
    return a = parseInt(n[1], 10), t = parseFloat(n[2].replace(",", ".")), nn(a, t) ? a % 24 * tn + t * Bn : NaN;
  if (n = Ye.HHMMSS.exec(e), n) {
    a = parseInt(n[1], 10), t = parseInt(n[2], 10);
    var u = parseFloat(n[3].replace(",", "."));
    return nn(a, t, u) ? a % 24 * tn + t * Bn + u * 1e3 : NaN;
  }
  return null;
}
function Yn(e, n, a) {
  n = n || 0, a = a || 0;
  var t = /* @__PURE__ */ new Date(0);
  t.setUTCFullYear(e, 0, 4);
  var u = t.getUTCDay() || 7, c = n * 7 + a + 1 - u;
  return t.setUTCDate(t.getUTCDate() + c), t;
}
var Wa = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], Ha = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
function na(e) {
  return e % 400 === 0 || e % 4 === 0 && e % 100 !== 0;
}
function Vn(e, n, a) {
  if (n < 0 || n > 11)
    return !1;
  if (a != null) {
    if (a < 1)
      return !1;
    var t = na(e);
    if (t && a > Ha[n] || !t && a > Wa[n])
      return !1;
  }
  return !0;
}
function xa(e, n) {
  if (n < 1)
    return !1;
  var a = na(e);
  return !(a && n > 366 || !a && n > 365);
}
function En(e, n, a) {
  return !(n < 0 || n > 52 || a != null && (a < 0 || a > 6));
}
function nn(e, n, a) {
  return !(e != null && (e < 0 || e >= 25) || n != null && (n < 0 || n >= 60) || a != null && (a < 0 || a >= 60));
}
var yn = { exports: {} }, gn = { exports: {} };
(function(e, n) {
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = a;
  function a(t, u) {
    if (t == null)
      throw new TypeError("assign requires that input parameter not be null or undefined");
    for (var c in u)
      Object.prototype.hasOwnProperty.call(u, c) && (t[c] = u[c]);
    return t;
  }
  e.exports = n.default;
})(gn, gn.exports);
var za = gn.exports;
(function(e, n) {
  var a = $a.default;
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = u;
  var t = a(za);
  function u(c) {
    return (0, t.default)({}, c);
  }
  e.exports = n.default;
})(yn, yn.exports);
var ja = yn.exports;
const Ka = /* @__PURE__ */ wn(ja);
function Ga(e, n, a) {
  var t = mn(e, a), u = Dn(n, t, !0), c = new Date(t.getTime() - u), y = /* @__PURE__ */ new Date(0);
  return y.setFullYear(c.getUTCFullYear(), c.getUTCMonth(), c.getUTCDate()), y.setHours(c.getUTCHours(), c.getUTCMinutes(), c.getUTCSeconds(), c.getUTCMilliseconds()), y;
}
function Za(e, n, a) {
  if (typeof e == "string" && !e.match(ta)) {
    var t = Ka(a);
    return t.timeZone = n, mn(e, t);
  }
  var u = mn(e, a), c = bn(
    u.getFullYear(),
    u.getMonth(),
    u.getDate(),
    u.getHours(),
    u.getMinutes(),
    u.getSeconds(),
    u.getMilliseconds()
  ).getTime(), y = Dn(n, new Date(c));
  return new Date(c + y);
}
const qa = (e, n = 3) => {
  const a = [];
  for (let t = 0; t < e.length; t += n)
    a.push([e[t], e[t + 1], e[t + 2]]);
  return a;
}, Xa = (e, n) => {
  const a = [1, 2, 3, 4, 5, 6, 7].map((c) => new Intl.DateTimeFormat(e, { weekday: "short", timeZone: "UTC" }).format(/* @__PURE__ */ new Date(`2017-01-0${c}T00:00:00+00:00`)).slice(0, 2)), t = a.slice(0, n), u = a.slice(n + 1, a.length);
  return [a[n]].concat(...u).concat(...t);
}, Ja = (e, n) => {
  const a = [];
  for (let t = +e[0]; t <= +e[1]; t++)
    a.push({ value: +t, text: `${t}` });
  return n ? a.reverse() : a;
}, Qa = (e, n) => {
  const a = new Intl.DateTimeFormat(e, { month: n, timeZone: "UTC" });
  return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map((u) => {
    const c = u < 10 ? `0${u}` : u;
    return /* @__PURE__ */ new Date(`2017-${c}-01T00:00:00+00:00`);
  }).map((u, c) => {
    const y = a.format(u);
    return {
      text: y.charAt(0).toUpperCase() + y.substring(1),
      value: c
    };
  });
}, el = (e) => [12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][e], Me = (e) => {
  const n = M(e);
  return n != null && n.$el ? n == null ? void 0 : n.$el : n;
}, tl = (e) => Object.assign({ type: "dot" }, e), aa = (e) => Array.isArray(e) ? !!e[0] && !!e[1] : !1, Ht = {
  prop: (e) => `"${e}" prop must be enabled!`,
  dateArr: (e) => `You need to use array as "model-value" binding in order to support "${e}"`
}, Ae = (e) => e, Ln = (e) => e === 0 ? e : !e || isNaN(+e) ? null : +e, Fn = (e) => Object.assign(
  {
    menuAppear: "",
    open: "dp-slide-down",
    close: "dp-slide-up",
    next: "calendar-next",
    previous: "calendar-prev",
    vNext: "dp-slide-up",
    vPrevious: "dp-slide-down"
  },
  e
), nl = (e) => Object.assign(
  {
    toggleOverlay: "Toggle overlay",
    menu: "Datepicker menu",
    input: "Datepicker input",
    calendarWrap: "Calendar wrapper",
    calendarDays: "Calendar days",
    openTimePicker: "Open time picker",
    closeTimePicker: "Close time Picker",
    incrementValue: (n) => `Increment ${n}`,
    decrementValue: (n) => `Decrement ${n}`,
    openTpOverlay: (n) => `Open ${n} overlay`,
    amPmButton: "Switch AM/PM mode",
    openYearsOverlay: "Open years overlay",
    openMonthsOverlay: "Open months overlay",
    nextMonth: "Next month",
    prevMonth: "Previous month",
    day: () => ""
  },
  e
), al = (e) => e === null ? 0 : typeof e == "boolean" ? e ? 2 : 0 : +e >= 2 ? +e : 2, ll = (e, n, a) => e || (typeof a == "string" ? a : n), rl = (e) => typeof e == "boolean" ? e ? Fn({}) : !1 : Fn(e), ol = () => ({
  enterSubmit: !0,
  tabSubmit: !0,
  openMenu: !0,
  rangeSeparator: " - "
}), sl = (e) => Object.assign({ months: [], years: [], times: { hours: [], minutes: [], seconds: [] } }, e), ul = (e) => Object.assign({ showSelect: !0, showCancel: !0, showNow: !1, showPreview: !0 }, e), Fe = (e) => {
  const n = () => {
    if (e.partialRange)
      return null;
    throw new Error(Ht.prop("partial-range"));
  }, a = L(() => ({
    ariaLabels: nl(e.ariaLabels),
    textInputOptions: Object.assign(ol(), e.textInputOptions),
    multiCalendars: al(e.multiCalendars),
    previewFormat: ll(e.previewFormat, e.format, c()),
    filters: sl(e.filters),
    transitions: rl(e.transitions),
    startTime: d(),
    actionRow: ul(e.actionRow)
  })), t = (i) => {
    if (e.range)
      return i();
    throw new Error(Ht.prop("range"));
  }, u = () => {
    const i = e.enableSeconds ? ":ss" : "";
    return e.is24 ? `HH:mm${i}` : `hh:mm${i} aa`;
  }, c = () => e.format ? e.format : e.monthPicker ? "MM/yyyy" : e.timePicker ? u() : e.weekPicker ? "MM/dd/yyyy" : e.yearPicker ? "yyyy" : e.enableTimePicker ? `MM/dd/yyyy, ${u()}` : "MM/dd/yyyy", y = (i, r) => {
    if (typeof e.format == "function")
      return e.format(i);
    const l = r || c(), g = e.formatLocale ? { locale: e.formatLocale } : void 0;
    return Array.isArray(i) ? `${St(i[0], l, g)}${e.modelAuto && !i[1] ? "" : a.value.textInputOptions.rangeSeparator || "-"}${i[1] ? St(i[1], l, g) : ""}` : St(i, l, g);
  }, N = (i) => e.timezone ? Ga(i, e.timezone) : i, V = (i) => e.timezone ? Za(i, e.timezone) : i, P = L(() => (i) => {
    var r;
    return (r = e.hideNavigation) == null ? void 0 : r.includes(i);
  }), F = (i) => {
    const r = e.maxDate ? Ve(N(i), N(T(e.maxDate))) : !1, l = e.minDate ? Ie(N(i), N(T(e.minDate))) : !1, g = Y(i, e.disabledDates), S = a.value.filters.months.map((ee) => +ee).includes(pe(i)), Q = e.disabledWeekDays.length ? e.disabledWeekDays.some((ee) => +ee === ca(i)) : !1, v = e.allowedDates.length ? !e.allowedDates.some((ee) => ge(N(T(ee)), N(i))) : !1, o = we(i), E = o < +e.yearRange[0] || o > +e.yearRange[1];
    return !(r || l || g || S || E || Q || v);
  }, C = (i) => {
    const r = {
      hours: et(T()),
      minutes: tt(T()),
      seconds: e.enableSeconds ? kt(T()) : 0
    };
    return Object.assign(r, i);
  }, d = () => e.range ? e.startTime && Array.isArray(e.startTime) ? [C(e.startTime[0]), C(e.startTime[1])] : null : e.startTime && !Array.isArray(e.startTime) ? C(e.startTime) : null, k = (i) => !F(i), J = (i) => Array.isArray(i) ? Ft(i[0]) && (i[1] ? Ft(i[1]) : !0) : i ? Ft(i) : !1, x = (i) => i instanceof Date ? i : fa(i), z = (i) => {
    const r = Sn(N(i), { weekStartsOn: +e.weekStart }), l = va(N(i), { weekStartsOn: +e.weekStart });
    return [r, l];
  }, Y = (i, r) => Array.isArray(r) ? r.some((l) => ge(N(T(l)), N(i))) : r(T(JSON.parse(JSON.stringify(i)))), U = (i, r, l) => {
    let g = i ? T(i) : T();
    return (r || r === 0) && (g = Ut(g, r)), l && (g = st(g, l)), g;
  }, O = (i) => Ne(T(), Yt(i)), G = (i) => Ne(T(), {
    hours: +i.hours || 0,
    minutes: +i.minutes || 0,
    seconds: +i.seconds || 0
  }), j = (i, r, l, g) => {
    if (!i)
      return !0;
    if (g) {
      const D = l === "max" ? Nt(i, r) : _t(i, r), S = { seconds: 0, milliseconds: 0 };
      return D || ft(Ne(i, S), Ne(r, S));
    }
    return l === "max" ? i.getTime() <= r.getTime() : i.getTime() >= r.getTime();
  }, le = () => !e.enableTimePicker || e.monthPicker || e.yearPicker || e.ignoreTimeValidation, se = (i) => Array.isArray(i) ? [i[0] ? O(i[0]) : null, i[1] ? O(i[1]) : null] : O(i), ue = (i) => {
    const r = e.maxTime ? G(e.maxTime) : T(e.maxDate);
    return Array.isArray(i) ? j(i[0], r, "max", !!e.maxDate) && j(i[1], r, "max", !!e.maxDate) : j(i, r, "max", !!e.maxDate);
  }, ce = (i, r) => {
    const l = e.minTime ? G(e.minTime) : T(e.minDate);
    return Array.isArray(i) ? j(i[0], l, "min", !!e.minDate) && j(i[1], l, "min", !!e.minDate) && r : j(i, l, "min", !!e.minDate) && r;
  }, fe = (i) => {
    let r = !0;
    if (!i || le())
      return !0;
    const l = !e.minDate && !e.maxDate ? se(i) : i;
    if ((e.maxTime || e.maxDate) && (r = ue(Ae(l))), (e.minTime || e.minDate) && (r = ce(Ae(l), r)), e.disabledTimes) {
      const g = Array.isArray(i) ? [Yt(i[0]), i[1] ? Yt(i[1]) : void 0] : Yt(i);
      r = !e.disabledTimes(g);
    }
    return r;
  }, _ = (i, r) => {
    const l = T(JSON.parse(JSON.stringify(i))), g = [];
    for (let D = 0; D < 7; D++) {
      const S = vt(l, D), Q = pe(S) !== r;
      g.push({
        text: e.hideOffsetDates && Q ? "" : S.getDate(),
        value: S,
        current: !Q,
        classData: {}
      });
    }
    return g;
  }, b = (i, r) => {
    const l = [], g = T(N(new Date(r, i))), D = T(N(new Date(r, i + 1, 0))), S = e.weekStart, Q = Sn(g, { weekStartsOn: S }), v = (o) => {
      const E = _(o, i);
      if (l.push({ days: E }), !l[l.length - 1].days.some(
        (ee) => ge(ze(ee.value), ze(D))
      )) {
        const ee = vt(o, 7);
        v(ee);
      }
    };
    if (v(Q), e.sixWeeks && l.length < 6) {
      const o = 6 - l.length, E = (g.getDay() + 7 - S) % 7, ke = 6 - (D.getDay() + 7 - S) % 7, [He, qe] = (() => {
        switch (e.sixWeeks === !0 ? "append" : e.sixWeeks) {
          case "prepend":
            return [!0, !1];
          case "center":
            return [E == 0, !0];
          case "fair":
            return [E == 0 || ke > E, !0];
          default:
          case "append":
            return [!1, !1];
        }
      })();
      for (let ne = 1; ne <= o; ne++)
        if (qe ? !!(ne % 2) == He : He) {
          const Ee = l[0].days[0], Se = _(vt(Ee.value, -7), pe(g));
          l.unshift({ days: Se });
        } else {
          const Ee = l[l.length - 1], Se = Ee.days[Ee.days.length - 1], Je = _(vt(Se.value, 1), pe(g));
          l.push({ days: Je });
        }
    }
    return l;
  }, f = (i, r, l) => [Ne(T(i), { date: 1 }), Ne(T(), { month: r, year: l, date: 1 })], R = (i, r) => Ie(...f(e.minDate, i, r)) || ge(...f(e.minDate, i, r)), B = (i, r) => Ve(...f(e.maxDate, i, r)) || ge(...f(e.maxDate, i, r)), $ = (i, r, l) => {
    let g = !1;
    return e.maxDate && l && B(i, r) && (g = !0), e.minDate && !l && R(i, r) && (g = !0), g;
  };
  return {
    checkPartialRangeValue: n,
    checkRangeEnabled: t,
    getZonedDate: N,
    getZonedToUtc: V,
    formatDate: y,
    getDefaultPattern: c,
    validateDate: F,
    getDefaultStartTime: d,
    isDisabled: k,
    isValidDate: J,
    sanitizeDate: x,
    getWeekFromDate: z,
    matchDate: Y,
    setDateMonthOrYear: U,
    isValidTime: fe,
    getCalendarDays: b,
    validateMonthYearInRange: (i, r, l, g) => {
      let D = !1;
      return g ? e.minDate && e.maxDate ? D = $(i, r, l) : (e.minDate && R(i, r) || e.maxDate && B(i, r)) && (D = !0) : D = !0, D;
    },
    validateMaxDate: B,
    validateMinDate: R,
    assignDefaultTime: C,
    defaults: a,
    hideNavigationButtons: P
  };
}, be = Rt({
  monthYear: [],
  calendar: [],
  time: [],
  actionRow: [],
  selectionGrid: [],
  timePicker: {
    0: [],
    1: []
  },
  monthPicker: []
}), an = H(null), Vt = H(!1), ln = H(!1), rn = H(!1), on = H(!1), Be = H(0), _e = H(0), it = () => {
  const e = L(() => Vt.value ? [...be.selectionGrid, be.actionRow].filter((Y) => Y.length) : ln.value ? [
    ...be.timePicker[0],
    ...be.timePicker[1],
    on.value ? [] : [an.value],
    be.actionRow
  ].filter((Y) => Y.length) : rn.value ? [...be.monthPicker, be.actionRow] : [be.monthYear, ...be.calendar, be.time, be.actionRow].filter((Y) => Y.length)), n = (Y) => {
    Be.value = Y ? Be.value + 1 : Be.value - 1;
    let U = null;
    e.value[_e.value] && (U = e.value[_e.value][Be.value]), U || (Be.value = Y ? Be.value - 1 : Be.value + 1);
  }, a = (Y) => {
    if (_e.value === 0 && !Y || _e.value === e.value.length && Y)
      return;
    _e.value = Y ? _e.value + 1 : _e.value - 1, e.value[_e.value] ? e.value[_e.value] && !e.value[_e.value][Be.value] && Be.value !== 0 && (Be.value = e.value[_e.value].length - 1) : _e.value = Y ? _e.value - 1 : _e.value + 1;
  }, t = (Y) => {
    let U = null;
    e.value[_e.value] && (U = e.value[_e.value][Be.value]), U ? U.focus({ preventScroll: !Vt.value }) : Be.value = Y ? Be.value - 1 : Be.value + 1;
  }, u = () => {
    n(!0), t(!0);
  }, c = () => {
    n(!1), t(!1);
  }, y = () => {
    a(!1), t(!0);
  }, N = () => {
    a(!0), t(!0);
  }, V = (Y, U) => {
    be[U] = Y;
  }, P = (Y, U) => {
    be[U] = Y;
  }, F = () => {
    Be.value = 0, _e.value = 0;
  };
  return {
    buildMatrix: V,
    buildMultiLevelMatrix: P,
    setTimePickerBackRef: (Y) => {
      an.value = Y;
    },
    setSelectionGrid: (Y) => {
      Vt.value = Y, F(), Y || (be.selectionGrid = []);
    },
    setTimePicker: (Y, U = !1) => {
      ln.value = Y, on.value = U, F(), Y || (be.timePicker[0] = [], be.timePicker[1] = []);
    },
    setTimePickerElements: (Y, U = 0) => {
      be.timePicker[U] = Y;
    },
    arrowRight: u,
    arrowLeft: c,
    arrowUp: y,
    arrowDown: N,
    clearArrowNav: () => {
      be.monthYear = [], be.calendar = [], be.time = [], be.actionRow = [], be.selectionGrid = [], be.timePicker[0] = [], be.timePicker[1] = [], Vt.value = !1, ln.value = !1, on.value = !1, rn.value = !1, F(), an.value = null;
    },
    setMonthPicker: (Y) => {
      rn.value = Y, F();
    },
    refSets: be
    // exposed for testing
  };
}, Un = (e) => Array.isArray(e), ct = (e) => Array.isArray(e), Wn = (e) => Array.isArray(e) && e.length === 2, il = (e, n, a, t, u) => {
  const {
    getDefaultStartTime: c,
    isDisabled: y,
    sanitizeDate: N,
    getWeekFromDate: V,
    setDateMonthOrYear: P,
    validateMonthYearInRange: F,
    defaults: C
  } = Fe(e), d = L({
    get: () => e.internalModelValue,
    set: (s) => {
      !e.readonly && !e.disabled && n("update:internal-model-value", s);
    }
  }), k = H([]);
  ut(d, (s, w) => {
    e.range ? se() : ft(s, w) || se();
  });
  const J = Ct(e, "multiCalendars");
  ut(J, () => {
    re(0);
  });
  const x = H([{ month: pe(T()), year: we(T()) }]), z = Rt({
    hours: e.range ? [et(T()), et(T())] : et(T()),
    minutes: e.range ? [tt(T()), tt(T())] : tt(T()),
    seconds: e.range ? [0, 0] : 0
  }), Y = L(
    () => (s) => x.value[s] ? x.value[s].month : 0
  ), U = L(
    () => (s) => x.value[s] ? x.value[s].year : 0
  ), O = L(() => e.flow && e.flow.length && !e.partialFlow ? u.value === e.flow.length : !0), G = (s, w, Z) => {
    var ae, $e;
    x.value[s] || (x.value[s] = { month: 0, year: 0 }), x.value[s].month = w === null ? (ae = x.value[s]) == null ? void 0 : ae.month : w, x.value[s].year = Z === null ? ($e = x.value[s]) == null ? void 0 : $e.year : Z;
  }, j = (s, w) => {
    z[s] = w;
  }, le = () => {
    e.startDate && (G(0, pe(T(e.startDate)), we(T(e.startDate))), C.value.multiCalendars && re(0));
  };
  We(() => {
    d.value || (le(), C.value.startTime && m()), se(!0), e.focusStartDate && e.startDate && le();
  });
  const se = (s = !1) => {
    if (d.value)
      return Array.isArray(d.value) ? (k.value = d.value, b(s)) : ce(d.value, s);
    if (e.timePicker)
      return f();
    if (e.monthPicker && !e.range)
      return R();
    if (e.yearPicker && !e.range)
      return B();
    if (C.value.multiCalendars && s && !e.startDate)
      return ue(T(), s);
  }, ue = (s, w = !1) => {
    if ((!C.value.multiCalendars || !e.multiStatic || w) && G(0, pe(s), we(s)), C.value.multiCalendars)
      for (let Z = 1; Z < C.value.multiCalendars; Z++) {
        const ae = Ne(T(), { month: Y.value(Z - 1), year: U.value(Z - 1) }), $e = Gn(ae, { months: 1 });
        x.value[Z] = { month: pe($e), year: we($e) };
      }
  }, ce = (s, w) => {
    ue(s), j("hours", et(s)), j("minutes", tt(s)), j("seconds", kt(s)), C.value.multiCalendars && w && r();
  }, fe = (s, w) => {
    s[1] && e.showLastInRange ? ue(s[1], w) : ue(s[0], w);
    const Z = (ae, $e) => [
      ae(s[0]),
      s[1] ? ae(s[1]) : z[$e][1]
    ];
    j("hours", Z(et, "hours")), j("minutes", Z(tt, "minutes")), j("seconds", Z(kt, "seconds"));
  }, _ = (s, w) => {
    if ((e.range || e.weekPicker) && !e.multiDates)
      return fe(s, w);
    if (e.multiDates) {
      const Z = s[s.length - 1];
      return ce(Z, w);
    }
  }, b = (s) => {
    const w = d.value;
    _(w, s), C.value.multiCalendars && e.multiCalendarsSolo && r();
  }, f = () => {
    if (m(), !e.range)
      d.value = Ue(T(), z.hours, z.minutes, $());
    else {
      const s = z.hours, w = z.minutes;
      d.value = [
        Ue(T(), s[0], w[0], $()),
        Ue(T(), s[1], w[1], $(!1))
      ];
    }
  }, R = () => {
    e.multiDates ? d.value = [P(T(), Y.value(0), U.value(0))] : d.value = P(T(), Y.value(0), U.value(0));
  }, B = () => {
    d.value = T();
  }, $ = (s = !0) => e.enableSeconds ? Array.isArray(z.seconds) ? s ? z.seconds[0] : z.seconds[1] : z.seconds : 0, m = () => {
    const s = c();
    if (s) {
      const w = Array.isArray(s), Z = w ? [+s[0].hours, +s[1].hours] : +s.hours, ae = w ? [+s[0].minutes, +s[1].minutes] : +s.minutes, $e = w ? [+s[0].seconds, +s[1].seconds] : +s.seconds;
      j("hours", Z), j("minutes", ae), e.enableSeconds && j("seconds", $e);
    }
  }, i = () => Array.isArray(d.value) && d.value.length ? d.value[d.value.length - 1] : null, r = () => {
    if (Array.isArray(d.value) && d.value.length === 2) {
      const s = T(
        T(d.value[1] ? d.value[1] : mt(d.value[0], 1))
      ), [w, Z] = [pe(d.value[0]), we(d.value[0])], [ae, $e] = [pe(d.value[1]), we(d.value[1])];
      (w !== ae || w === ae && Z !== $e) && e.multiCalendarsSolo && G(1, pe(s), we(s));
    } else
      d.value && !Array.isArray(d.value) && G(0, pe(d.value), we(d.value));
  }, l = (s) => {
    const w = mt(s, 1);
    return { month: pe(w), year: we(w) };
  }, g = (s) => {
    const w = pe(T(s)), Z = we(T(s));
    if (G(0, w, Z), C.value.multiCalendars > 0)
      for (let ae = 1; ae < C.value.multiCalendars; ae++) {
        const $e = l(
          Ne(T(s), { year: Y.value(ae - 1), month: U.value(ae - 1) })
        );
        G(ae, $e.month, $e.year);
      }
  }, D = (s) => {
    if (d.value && Array.isArray(d.value))
      if (d.value.some((w) => ge(s, w))) {
        const w = d.value.filter((Z) => !ge(Z, s));
        d.value = w.length ? w : null;
      } else
        (e.multiDatesLimit && +e.multiDatesLimit > d.value.length || !e.multiDatesLimit) && d.value.push(s);
    else
      d.value = [s];
  }, S = (s, w) => {
    const Z = Ve(s, w) ? w : s, ae = Ve(w, s) ? w : s;
    return An({ start: Z, end: ae });
  }, Q = (s, w = 0) => {
    if (Array.isArray(d.value) && d.value[w]) {
      const Z = ga(s, d.value[w]), ae = S(d.value[w], s), $e = ae.length === 1 ? 0 : ae.filter((rt) => y(rt)).length, Ke = Math.abs(Z) - $e;
      if (e.minRange && e.maxRange)
        return Ke >= +e.minRange && Ke <= +e.maxRange;
      if (e.minRange)
        return Ke >= +e.minRange;
      if (e.maxRange)
        return Ke <= +e.maxRange;
    }
    return !0;
  }, v = (s) => Array.isArray(d.value) && d.value.length === 2 ? e.fixedStart && (Ve(s, d.value[0]) || ge(s, d.value[0])) ? [d.value[0], s] : e.fixedEnd && (Ie(s, d.value[1]) || ge(s, d.value[1])) ? [s, d.value[1]] : (n("invalid-fixed-range", s), d.value) : [], o = () => {
    e.autoApply && O.value && n("auto-apply", e.partialFlow);
  }, E = () => {
    e.autoApply && n("select-date");
  }, ee = (s) => !An({ start: s[0], end: s[1] }).some((Z) => y(Z)), ke = (s) => (d.value = V(T(s.value)), o()), He = (s) => {
    const w = Ue(T(s.value), z.hours, z.minutes, $());
    e.multiDates ? D(w) : d.value = w, a(), o();
  }, qe = () => {
    k.value = d.value ? d.value.slice() : [], k.value.length === 2 && !(e.fixedStart || e.fixedEnd) && (k.value = []);
  }, ne = (s, w) => {
    const Z = [T(s.value), vt(T(s.value), +e.autoRange)];
    ee(Z) && (w && g(s.value), k.value = Z);
  }, Xe = (s) => {
    Ee(s.value) || !Q(s.value, e.fixedStart ? 0 : 1) || (k.value = v(T(s.value)));
  }, Ee = (s) => e.noDisabledRange ? S(k.value[0], s).some((Z) => y(Z)) : !1, Se = (s, w) => {
    if (qe(), e.autoRange)
      return ne(s, w);
    if (e.fixedStart || e.fixedEnd)
      return Xe(s);
    k.value[0] ? Q(T(s.value)) && !Ee(s.value) && (Ie(T(s.value), T(k.value[0])) ? (k.value.unshift(T(s.value)), n("range-end", k.value[0])) : (k.value[1] = T(s.value), n("range-end", k.value[1]))) : (k.value[0] = T(s.value), n("range-start", k.value[0]));
  }, Je = (s) => {
    k.value[s] = Ue(
      k.value[s],
      z.hours[s],
      z.minutes[s],
      $(s !== 1)
    );
  }, bt = () => {
    k.value.length && (k.value[0] && !k.value[1] ? Je(0) : (Je(0), Je(1), a()), d.value = k.value.slice(), k.value[0] && k.value[1] && e.autoApply && n("auto-apply"), k.value[0] && !k.value[1] && e.modelAuto && e.autoApply && n("auto-apply"));
  }, Dt = (s, w = !1) => {
    if (!(y(s.value) || !s.current && e.hideOffsetDates)) {
      if (e.weekPicker)
        return ke(s);
      if (!e.range)
        return He(s);
      ct(z.hours) && ct(z.minutes) && !e.multiDates && (Se(s, w), bt());
    }
  }, X = (s) => {
    const w = s[0];
    return e.weekNumbers === "local" ? ma(w.value, { weekStartsOn: +e.weekStart }) : e.weekNumbers === "iso" ? ya(w.value) : typeof e.weekNumbers == "function" ? e.weekNumbers(w.value) : "";
  }, re = (s) => {
    for (let w = s - 1; w >= 0; w--) {
      const Z = At(Ne(T(), { month: Y.value(w + 1), year: U.value(w + 1) }), 1);
      G(w, pe(Z), we(Z));
    }
    for (let w = s + 1; w <= C.value.multiCalendars - 1; w++) {
      const Z = mt(Ne(T(), { month: Y.value(w - 1), year: U.value(w - 1) }), 1);
      G(w, pe(Z), we(Z));
    }
  }, te = (s) => P(T(), Y.value(s), U.value(s)), ht = (s) => Ue(s, z.hours, z.minutes, $()), lt = (s) => {
    D(te(s));
  }, jt = (s, w) => {
    const Z = e.monthPicker ? Y.value(s) !== w.month || !w.fromNav : U.value(s) !== w.year || !w.fromNav;
    if (G(s, w.month, w.year), C.value.multiCalendars && !e.multiCalendarsSolo && re(s), e.monthPicker || e.yearPicker)
      if (e.multiDates)
        Z && lt(s);
      else if (e.range) {
        if (Z && Q(te(s))) {
          let ae = d.value ? d.value.slice() : [];
          ae.length === 2 && ae[1] !== null && (ae = []), ae.length ? Ie(te(s), ae[0]) ? ae.unshift(te(s)) : ae[1] = te(s) : ae = [te(s)], d.value = ae;
        }
      } else
        d.value = te(s);
    n("update-month-year", { instance: s, month: w.month, year: w.year }), t(e.multiCalendarsSolo ? s : void 0);
  }, Kt = async (s = !1) => {
    if (e.autoApply && (e.monthPicker || e.yearPicker)) {
      await at();
      const w = e.monthPicker ? s : !1;
      e.range ? n("auto-apply", w || !d.value || d.value.length === 1) : n("auto-apply", w);
    }
    a();
  }, Ot = (s, w) => {
    const Z = Ne(T(), { month: Y.value(w), year: U.value(w) }), ae = s < 0 ? mt(Z, 1) : At(Z, 1);
    F(pe(ae), we(ae), s < 0, e.preventMinMaxNavigation) && (G(w, pe(ae), we(ae)), C.value.multiCalendars && !e.multiCalendarsSolo && re(w), n("update-month-year", { instance: w, month: pe(ae), year: we(ae) }), t());
  }, $t = (s) => {
    Un(s) && Un(d.value) && ct(z.hours) && ct(z.minutes) ? (s[0] && d.value[0] && (d.value[0] = Ue(s[0], z.hours[0], z.minutes[0], $())), s[1] && d.value[1] && (d.value[1] = Ue(s[1], z.hours[1], z.minutes[1], $(!1)))) : e.multiDates && Array.isArray(d.value) ? d.value[d.value.length - 1] = ht(s) : !e.range && !Wn(s) && (d.value = ht(s)), n("time-update");
  }, Gt = (s, w = !0, Z = !1) => {
    const ae = w ? s : z.hours, $e = !w && !Z ? s : z.minutes, Ke = Z ? s : z.seconds;
    if (e.range && Wn(d.value) && ct(ae) && ct($e) && ct(Ke) && !e.disableTimeRangeValidation) {
      const rt = (W) => Ue(d.value[W], ae[W], $e[W], Ke[W]), h = (W) => kn(d.value[W], 0);
      if (ge(d.value[0], d.value[1]) && (_t(rt(0), h(1)) || Nt(rt(1), h(0))))
        return;
    }
    if (j("hours", ae), j("minutes", $e), j("seconds", Ke), d.value)
      if (e.multiDates) {
        const rt = i();
        rt && $t(rt);
      } else
        $t(d.value);
    else
      e.timePicker && $t(e.range ? [T(), T()] : T());
    a();
  }, Zt = (s, w) => {
    e.monthChangeOnScroll && Ot(e.monthChangeOnScroll !== "inverse" ? -s.deltaY : s.deltaY, w);
  }, qt = (s, w, Z = !1) => {
    e.monthChangeOnArrows && e.vertical === Z && It(s, w);
  }, It = (s, w) => {
    Ot(s === "right" ? -1 : 1, w);
  };
  return {
    time: z,
    month: Y,
    year: U,
    modelValue: d,
    calendars: x,
    monthYearSelect: Kt,
    isDisabled: y,
    updateTime: Gt,
    getWeekNum: X,
    selectDate: Dt,
    updateMonthYear: jt,
    handleScroll: Zt,
    getMarker: (s) => e.markers.find((w) => ge(N(s.value), N(w.date))),
    handleArrow: qt,
    handleSwipe: It,
    selectCurrentDate: () => {
      e.range ? d.value && Array.isArray(d.value) && d.value[0] ? d.value = Ie(T(), d.value[0]) ? [T(), d.value[0]] : [d.value[0], T()] : d.value = [T()] : d.value = T(), E();
    },
    presetDateRange: (s, w) => {
      w || s.length && s.length <= 2 && e.range && (d.value = s.map((Z) => T(Z)), E(), e.multiCalendars && at().then(() => se(!0)));
    }
  };
}, dl = (e, n, a) => {
  const t = H(), {
    getZonedToUtc: u,
    getZonedDate: c,
    formatDate: y,
    getDefaultPattern: N,
    checkRangeEnabled: V,
    checkPartialRangeValue: P,
    isValidDate: F,
    setDateMonthOrYear: C,
    defaults: d
  } = Fe(n), k = H(""), J = Ct(n, "format");
  ut(t, () => {
    e("internal-model-change", t.value);
  }), ut(J, () => {
    i();
  });
  const x = (o) => {
    const E = o || T();
    return n.modelType ? l(E) : {
      hours: et(E),
      minutes: tt(E),
      seconds: n.enableSeconds ? kt(E) : 0
    };
  }, z = (o) => n.modelType ? l(o) : { month: pe(o), year: we(o) }, Y = (o) => Array.isArray(o) ? V(() => [
    st(T(), o[0]),
    o[1] ? st(T(), o[1]) : P()
  ]) : st(T(), +o), U = (o, E) => (typeof o == "string" || typeof o == "number") && n.modelType ? r(o) : E, O = (o) => Array.isArray(o) ? [
    U(
      o[0],
      Ue(null, +o[0].hours, +o[0].minutes, o[0].seconds)
    ),
    U(
      o[1],
      Ue(null, +o[1].hours, +o[1].minutes, o[1].seconds)
    )
  ] : U(o, Ue(null, o.hours, o.minutes, o.seconds)), G = (o) => Array.isArray(o) ? n.multiDates ? o.map((E) => U(E, C(null, +E.month, +E.year))) : V(() => [
    U(o[0], C(null, +o[0].month, +o[0].year)),
    U(
      o[1],
      o[1] ? C(null, +o[1].month, +o[1].year) : P()
    )
  ]) : U(o, C(null, +o.month, +o.year)), j = (o) => {
    if (Array.isArray(o))
      return o.map((E) => r(E));
    throw new Error(Ht.dateArr("multi-dates"));
  }, le = (o) => {
    if (Array.isArray(o))
      return [T(o[0]), T(o[1])];
    throw new Error(Ht.dateArr("week-picker"));
  }, se = (o) => n.modelAuto ? Array.isArray(o) ? [r(o[0]), r(o[1])] : n.autoApply ? [r(o)] : [r(o), null] : Array.isArray(o) ? V(() => [
    r(o[0]),
    o[1] ? r(o[1]) : P()
  ]) : r(o), ue = () => {
    Array.isArray(t.value) && n.range && t.value.length === 1 && t.value.push(P());
  }, ce = () => {
    const o = t.value;
    return [
      l(o[0]),
      o[1] ? l(o[1]) : P()
    ];
  }, fe = () => t.value[1] ? ce() : l(Ae(t.value[0])), _ = () => (t.value || []).map((o) => l(o)), b = () => (ue(), n.modelAuto ? fe() : n.multiDates ? _() : Array.isArray(t.value) ? V(() => ce()) : l(Ae(t.value))), f = (o) => o ? n.timePicker ? O(Ae(o)) : n.monthPicker ? G(Ae(o)) : n.yearPicker ? Y(Ae(o)) : n.multiDates ? j(Ae(o)) : n.weekPicker ? le(Ae(o)) : se(Ae(o)) : null, R = (o) => {
    const E = f(o);
    F(Ae(E)) ? (t.value = Ae(E), i()) : (t.value = null, k.value = "");
  }, B = () => {
    var E;
    const o = (ee) => {
      var ke;
      return St(ee, (ke = d.value.textInputOptions) == null ? void 0 : ke.format);
    };
    return `${o(t.value[0])} ${(E = d.value.textInputOptions) == null ? void 0 : E.rangeSeparator} ${t.value[1] ? o(t.value[1]) : ""}`;
  }, $ = () => {
    var o;
    return a.value && t.value ? Array.isArray(t.value) ? B() : St(t.value, (o = d.value.textInputOptions) == null ? void 0 : o.format) : y(t.value);
  }, m = () => {
    var o;
    return t.value ? n.multiDates ? t.value.map((E) => y(E)).join("; ") : n.textInput && typeof ((o = d.value.textInputOptions) == null ? void 0 : o.format) == "string" ? $() : y(t.value) : "";
  }, i = () => {
    !n.format || typeof n.format == "string" ? k.value = m() : k.value = n.format(t.value);
  }, r = (o) => {
    if (n.utc) {
      const E = new Date(o);
      return n.utc === "preserve" ? new Date(E.getTime() + E.getTimezoneOffset() * 6e4) : E;
    }
    return n.modelType ? n.modelType === "date" || n.modelType === "timestamp" ? c(new Date(o)) : n.modelType === "format" && (typeof n.format == "string" || !n.format) ? dn(o, N(), /* @__PURE__ */ new Date()) : c(dn(o, n.modelType, /* @__PURE__ */ new Date())) : c(new Date(o));
  }, l = (o) => o ? n.utc ? Da(o, n.utc === "preserve", n.enableSeconds) : n.modelType ? n.modelType === "timestamp" ? +u(o) : n.modelType === "format" && (typeof n.format == "string" || !n.format) ? y(u(o)) : y(u(o), n.modelType) : u(o) : "", g = (o) => {
    e("update:model-value", o);
  }, D = (o) => Array.isArray(t.value) ? n.multiDates ? t.value.map((E) => o(E)) : [
    o(t.value[0]),
    t.value[1] ? o(t.value[1]) : P()
  ] : o(Ae(t.value)), S = (o) => g(Ae(D(o)));
  return {
    inputValue: k,
    internalModelValue: t,
    checkBeforeEmit: () => t.value ? n.range ? n.partialRange ? t.value.length >= 1 : t.value.length === 2 : !!t.value : !1,
    parseExternalModelValue: R,
    formatInputValue: i,
    emitModelValue: () => (i(), n.monthPicker ? S(z) : n.timePicker ? S(x) : n.yearPicker ? S(we) : n.weekPicker ? g(t.value) : g(b()))
  };
}, cl = (e, n) => {
  const { validateMonthYearInRange: a, validateMaxDate: t, validateMinDate: u, defaults: c } = Fe(e), y = (C, d) => {
    let k = C;
    return c.value.filters.months.includes(pe(k)) ? (k = d ? mt(C, 1) : At(C, 1), y(k, d)) : k;
  }, N = (C, d) => {
    let k = C;
    return c.value.filters.years.includes(we(k)) ? (k = d ? ha(C, 1) : pa(C, 1), N(k, d)) : k;
  }, V = (C) => {
    const d = Ne(/* @__PURE__ */ new Date(), { month: e.month, year: e.year });
    let k = C ? mt(d, 1) : At(d, 1);
    e.disableYearSelect && (k = st(k, e.year));
    let J = pe(k), x = we(k);
    c.value.filters.months.includes(J) && (k = y(k, C), J = pe(k), x = we(k)), c.value.filters.years.includes(x) && (k = N(k, C), x = we(k)), a(J, x, C, e.preventMinMaxNavigation) && P(J, x);
  }, P = (C, d) => {
    n("update-month-year", { month: C, year: d });
  }, F = L(() => (C) => {
    if (!e.preventMinMaxNavigation || C && !e.maxDate || !C && !e.minDate)
      return !1;
    const d = Ne(/* @__PURE__ */ new Date(), { month: e.month, year: e.year }), k = C ? mt(d, 1) : At(d, 1), J = [pe(k), we(k)];
    return C ? !t(...J) : !u(...J);
  });
  return { handleMonthYearChange: V, isDisabled: F, updateMonthYear: P };
};
var Wt = /* @__PURE__ */ ((e) => (e.center = "center", e.left = "left", e.right = "right", e))(Wt || {});
const fl = (e, n, a, t) => {
  const u = H({
    top: "0",
    left: "0",
    transform: "none",
    opacity: "0"
  }), c = H(!1), y = Ct(t, "teleportCenter"), N = L(() => c.value ? "-100%" : "0"), V = () => {
    P(), u.value.opacity = "0";
  };
  ut(y, () => {
    U();
  }), We(() => {
    P();
  });
  const P = () => {
    const b = Me(n);
    if (b) {
      const { top: f, left: R, width: B, height: $ } = J(b);
      u.value.top = `${f + $ / 2}px`, k(R, B, 50);
    }
  }, F = (b) => {
    if (t.teleport) {
      const f = b.getBoundingClientRect();
      return {
        left: f.left + window.scrollX,
        top: f.top + window.scrollY
      };
    }
    return { top: 0, left: 0 };
  }, C = (b, f) => {
    u.value.left = `${b + f}px`, u.value.transform = `translate(-100%, ${N.value})`;
  }, d = (b) => {
    u.value.left = `${b}px`, u.value.transform = `translate(0, ${N.value})`;
  }, k = (b, f, R) => {
    t.position === Wt.left && d(b), t.position === Wt.right && C(b, f), t.position === Wt.center && (u.value.left = `${b + f / 2}px`, u.value.transform = R ? `translate(-50%, -${R}%)` : `translate(-50%, ${N.value})`);
  }, J = (b) => {
    const { width: f, height: R } = b.getBoundingClientRect(), { top: B, left: $ } = t.altPosition ? t.altPosition(b) : F(b);
    return { top: +B, left: +$, width: f, height: R };
  }, x = () => {
    const b = Me(n);
    if (b) {
      const { top: f, left: R, width: B, height: $ } = J(b), m = se();
      u.value.top = `${f + $ / 2}px`, k(R, B, m === "top" ? 100 : 0);
    }
  }, z = () => {
    u.value.left = "50%", u.value.top = "50%", u.value.transform = "translate(-50%, -50%)", u.value.position = "fixed", delete u.value.opacity;
  }, Y = () => {
    const b = Me(n), { top: f, left: R, transform: B } = t.altPosition(b);
    u.value = { top: `${f}px`, left: `${R}px`, transform: B || "" };
  }, U = (b = !0) => {
    if (!t.inline)
      return y.value ? z() : t.altPosition !== null ? Y() : (b && a("recalculate-position"), ce());
  }, O = ({
    inputEl: b,
    menuEl: f,
    left: R,
    width: B
  }) => {
    window.screen.width > 768 && k(R, B), le(b, f);
  }, G = (b, f) => {
    const { top: R, left: B, height: $, width: m } = J(b);
    u.value.top = `${$ + R + +t.offset}px`, c.value = !1, O({ inputEl: b, menuEl: f, left: B, width: m });
  }, j = (b, f) => {
    const { top: R, left: B, width: $ } = J(b);
    u.value.top = `${R - +t.offset}px`, c.value = !0, O({ inputEl: b, menuEl: f, left: B, width: $ });
  }, le = (b, f) => {
    if (t.autoPosition) {
      const { left: R, width: B } = J(b), { left: $, right: m } = f.getBoundingClientRect();
      return $ <= 0 || $ <= R ? d(R) : m >= document.documentElement.clientWidth ? C(R, B) : k(R, B);
    }
  }, se = () => {
    const b = Me(e), f = Me(n);
    if (b && f) {
      const { height: R } = b.getBoundingClientRect(), { top: B, height: $ } = f.getBoundingClientRect(), i = window.innerHeight - B - $, r = B;
      return R <= i ? "bottom" : R > i && R <= r ? "top" : i >= r ? "bottom" : "top";
    }
    return "bottom";
  }, ue = (b, f) => se() === "bottom" ? G(b, f) : j(b, f), ce = () => {
    const b = Me(n), f = Me(e);
    if (b && f)
      return t.autoPosition ? ue(b, f) : G(b, f);
  }, fe = function(b) {
    if (b) {
      const f = b.scrollHeight > b.clientHeight, B = window.getComputedStyle(b).overflowY.indexOf("hidden") !== -1;
      return f && !B;
    }
    return !0;
  }, _ = function(b) {
    return !b || b === document.body || b.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? window : fe(b) ? b : _(b.parentNode);
  };
  return { openOnTop: c, menuStyle: u, resetPosition: V, setMenuPosition: U, setInitialPosition: x, getScrollableParent: _ };
}, pt = [
  { name: "clock-icon", use: ["time", "calendar"] },
  { name: "arrow-left", use: ["month-year", "calendar"] },
  { name: "arrow-right", use: ["month-year", "calendar"] },
  { name: "arrow-up", use: ["time", "calendar"] },
  { name: "arrow-down", use: ["time", "calendar"] },
  { name: "calendar-icon", use: ["month-year", "time", "calendar"] },
  { name: "day", use: ["calendar"] },
  { name: "month-overlay-value", use: ["calendar", "month-year"] },
  { name: "year-overlay-value", use: ["calendar", "month-year"] },
  { name: "year-overlay", use: ["month-year"] },
  { name: "month-overlay", use: ["month-year"] },
  { name: "month-overlay-header", use: ["month-year"] },
  { name: "year-overlay-header", use: ["month-year"] },
  { name: "hours-overlay-value", use: ["calendar", "time"] },
  { name: "minutes-overlay-value", use: ["calendar", "time"] },
  { name: "seconds-overlay-value", use: ["calendar", "time"] },
  { name: "hours", use: ["calendar", "time"] },
  { name: "minutes", use: ["calendar", "time"] },
  { name: "month", use: ["calendar", "month-year"] },
  { name: "year", use: ["calendar", "month-year"] },
  { name: "action-buttons", use: ["action"] },
  { name: "action-preview", use: ["action"] },
  { name: "calendar-header", use: ["calendar"] },
  { name: "marker-tooltip", use: ["calendar"] },
  { name: "action-extra", use: ["menu"] },
  { name: "time-picker-overlay", use: ["calendar", "time"] },
  { name: "am-pm-button", use: ["calendar", "time"] },
  { name: "left-sidebar", use: ["menu"] },
  { name: "right-sidebar", use: ["menu"] },
  { name: "month-year", use: ["month-year"] },
  { name: "time-picker", use: ["menu"] },
  { name: "action-row", use: ["action"] }
], vl = [{ name: "trigger" }, { name: "input-icon" }, { name: "clear-icon" }, { name: "dp-input" }], ml = {
  all: () => pt,
  monthYear: () => pt.filter((e) => e.use.includes("month-year")),
  input: () => vl,
  timePicker: () => pt.filter((e) => e.use.includes("time")),
  action: () => pt.filter((e) => e.use.includes("action")),
  calendar: () => pt.filter((e) => e.use.includes("calendar")),
  menu: () => pt.filter((e) => e.use.includes("menu"))
}, yt = (e, n, a) => {
  const t = [];
  return ml[n]().forEach((u) => {
    e[u.name] && t.push(u.name);
  }), a && a.length && a.forEach((u) => {
    u.slot && t.push(u.slot);
  }), t;
}, zt = (e) => ({ transitionName: L(() => (a) => e && typeof e != "boolean" ? a ? e.open : e.close : ""), showTransition: !!e }), dt = {
  multiCalendars: { type: [Boolean, Number, String], default: null },
  modelValue: { type: [String, Date, Array, Object, Number], default: null },
  modelType: { type: String, default: null },
  position: { type: String, default: "center" },
  dark: { type: Boolean, default: !1 },
  format: {
    type: [String, Function],
    default: () => null
  },
  closeOnScroll: { type: Boolean, default: !1 },
  autoPosition: { type: Boolean, default: !0 },
  closeOnAutoApply: { type: Boolean, default: !0 },
  altPosition: { type: Function, default: null },
  transitions: { type: [Boolean, Object], default: !0 },
  formatLocale: { type: Object, default: null },
  utc: { type: [Boolean, String], default: !1 },
  ariaLabels: { type: Object, default: () => ({}) },
  offset: { type: [Number, String], default: 10 },
  hideNavigation: { type: Array, default: () => [] },
  timezone: { type: String, default: null },
  vertical: { type: Boolean, default: !1 },
  disableMonthYearSelect: { type: Boolean, default: !1 },
  disableYearSelect: { type: Boolean, default: !1 },
  menuClassName: { type: String, default: null },
  dayClass: { type: Function, default: null },
  yearRange: { type: Array, default: () => [1900, 2100] },
  multiCalendarsSolo: { type: Boolean, default: !1 },
  calendarCellClassName: { type: String, default: null },
  enableTimePicker: { type: Boolean, default: !0 },
  autoApply: { type: Boolean, default: !1 },
  disabledDates: { type: [Array, Function], default: () => [] },
  monthNameFormat: { type: String, default: "short" },
  startDate: { type: [Date, String], default: null },
  startTime: { type: [Object, Array], default: null },
  hideOffsetDates: { type: Boolean, default: !1 },
  autoRange: { type: [Number, String], default: null },
  noToday: { type: Boolean, default: !1 },
  disabledWeekDays: { type: Array, default: () => [] },
  allowedDates: { type: Array, default: () => [] },
  showNowButton: { type: Boolean, default: !1 },
  nowButtonLabel: { type: String, default: "Now" },
  markers: { type: Array, default: () => [] },
  modeHeight: { type: [Number, String], default: 255 },
  escClose: { type: Boolean, default: !0 },
  spaceConfirm: { type: Boolean, default: !0 },
  monthChangeOnArrows: { type: Boolean, default: !0 },
  presetRanges: { type: Array, default: () => [] },
  flow: { type: Array, default: () => [] },
  partialFlow: { type: Boolean, default: !1 },
  preventMinMaxNavigation: { type: Boolean, default: !1 },
  minRange: { type: [Number, String], default: null },
  maxRange: { type: [Number, String], default: null },
  multiDatesLimit: { type: [Number, String], default: null },
  reverseYears: { type: Boolean, default: !1 },
  keepActionRow: { type: Boolean, default: !1 },
  weekPicker: { type: Boolean, default: !1 },
  filters: { type: Object, default: () => ({}) },
  arrowNavigation: { type: Boolean, default: !1 },
  multiStatic: { type: Boolean, default: !0 },
  disableTimeRangeValidation: { type: Boolean, default: !1 },
  highlight: {
    type: [Array, Function],
    default: null
  },
  highlightWeekDays: {
    type: Array,
    default: null
  },
  highlightDisabledDays: { type: Boolean, default: !1 },
  teleport: { type: [String, Boolean], default: null },
  teleportCenter: { type: Boolean, default: !1 },
  locale: { type: String, default: "en-Us" },
  weekNumName: { type: String, default: "W" },
  weekStart: { type: [Number, String], default: 1 },
  weekNumbers: {
    type: [String, Function],
    default: null
  },
  calendarClassName: { type: String, default: null },
  noSwipe: { type: Boolean, default: !1 },
  monthChangeOnScroll: { type: [Boolean, String], default: !0 },
  dayNames: {
    type: [Function, Array],
    default: null
  },
  monthPicker: { type: Boolean, default: !1 },
  customProps: { type: Object, default: null },
  yearPicker: { type: Boolean, default: !1 },
  modelAuto: { type: Boolean, default: !1 },
  selectText: { type: String, default: "Select" },
  cancelText: { type: String, default: "Cancel" },
  previewFormat: {
    type: [String, Function],
    default: () => ""
  },
  multiDates: { type: Boolean, default: !1 },
  partialRange: { type: Boolean, default: !0 },
  ignoreTimeValidation: { type: Boolean, default: !1 },
  minDate: { type: [Date, String], default: null },
  maxDate: { type: [Date, String], default: null },
  minTime: { type: Object, default: null },
  maxTime: { type: Object, default: null },
  name: { type: String, default: null },
  placeholder: { type: String, default: "" },
  hideInputIcon: { type: Boolean, default: !1 },
  clearable: { type: Boolean, default: !0 },
  state: { type: Boolean, default: null },
  required: { type: Boolean, default: !1 },
  autocomplete: { type: String, default: "off" },
  inputClassName: { type: String, default: null },
  inlineWithInput: { type: Boolean, default: !1 },
  textInputOptions: { type: Object, default: () => null },
  fixedStart: { type: Boolean, default: !1 },
  fixedEnd: { type: Boolean, default: !1 },
  timePicker: { type: Boolean, default: !1 },
  enableSeconds: { type: Boolean, default: !1 },
  is24: { type: Boolean, default: !0 },
  noHoursOverlay: { type: Boolean, default: !1 },
  noMinutesOverlay: { type: Boolean, default: !1 },
  noSecondsOverlay: { type: Boolean, default: !1 },
  hoursGridIncrement: { type: [String, Number], default: 1 },
  minutesGridIncrement: { type: [String, Number], default: 5 },
  secondsGridIncrement: { type: [String, Number], default: 5 },
  hoursIncrement: { type: [Number, String], default: 1 },
  minutesIncrement: { type: [Number, String], default: 1 },
  secondsIncrement: { type: [Number, String], default: 1 },
  range: { type: Boolean, default: !1 },
  uid: { type: String, default: null },
  disabled: { type: Boolean, default: !1 },
  readonly: { type: Boolean, default: !1 },
  inline: { type: Boolean, default: !1 },
  textInput: { type: Boolean, default: !1 },
  onClickOutside: { type: Function, default: null },
  noDisabledRange: { type: Boolean, default: !1 },
  sixWeeks: { type: [Boolean, String], default: !1 },
  actionRow: { type: Object, default: () => ({}) },
  allowPreventDefault: { type: Boolean, default: !1 },
  closeOnClearValue: { type: Boolean, default: !0 },
  focusStartDate: { type: Boolean, default: !1 },
  disabledTimes: { type: Function, default: void 0 },
  showLastInRange: { type: Boolean, default: !0 }
}, yl = {
  key: 1,
  class: "dp__input_wrap"
}, gl = ["id", "name", "inputmode", "placeholder", "disabled", "readonly", "required", "value", "autocomplete", "aria-label", "onKeydown"], hl = {
  key: 0,
  class: "dp__input_icon"
}, pl = {
  key: 2,
  class: "dp__clear_icon"
}, kl = /* @__PURE__ */ je({
  __name: "DatepickerInput",
  props: {
    isMenuOpen: { type: Boolean, default: !1 },
    inputValue: { type: String, default: "" },
    ...dt
  },
  emits: [
    "clear",
    "open",
    "update:input-value",
    "set-input-date",
    "close",
    "select-date",
    "set-empty-date",
    "toggle",
    "focus-prev",
    "focus",
    "blur",
    "real-blur"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { getDefaultPattern: u, isValidDate: c, defaults: y, getDefaultStartTime: N, assignDefaultTime: V } = Fe(t), P = H(), F = H(null), C = H(!1), d = H(!1), k = L(
      () => ({
        dp__pointer: !t.disabled && !t.readonly && !t.textInput,
        dp__disabled: t.disabled,
        dp__input_readonly: !t.textInput,
        dp__input: !0,
        dp__input_icon_pad: !t.hideInputIcon,
        dp__input_valid: t.state,
        dp__input_invalid: t.state === !1,
        dp__input_focus: C.value || t.isMenuOpen,
        dp__input_reg: !t.textInput,
        [t.inputClassName]: !!t.inputClassName
      })
    ), J = () => {
      a("set-input-date", null), t.autoApply && (a("set-empty-date"), P.value = null);
    }, x = (f) => {
      var B;
      const R = N();
      return ba(
        f,
        ((B = y.value.textInputOptions) == null ? void 0 : B.format) || u(),
        R || V({}),
        t.inputValue,
        d.value
      );
    }, z = (f) => {
      const { rangeSeparator: R } = y.value.textInputOptions, [B, $] = f.split(`${R}`);
      if (B) {
        const m = x(B.trim()), i = $ ? x($.trim()) : null, r = m && i ? [m, i] : [m];
        P.value = m ? r : null;
      }
    }, Y = () => {
      d.value = !0;
    }, U = (f) => {
      if (t.range)
        z(f);
      else if (t.multiDates) {
        const R = f.split(";");
        P.value = R.map((B) => x(B.trim())).filter((B) => B);
      } else
        P.value = x(f);
    }, O = (f) => {
      var B;
      const { value: R } = f.target;
      R !== "" ? ((B = y.value.textInputOptions) != null && B.openMenu && !t.isMenuOpen && a("open"), U(R), a("set-input-date", P.value)) : J(), d.value = !1, a("update:input-value", R);
    }, G = (f) => {
      var R, B;
      t.textInput ? (U(f.target.value), (R = y.value.textInputOptions) != null && R.enterSubmit && c(P.value) && t.inputValue !== "" ? (a("set-input-date", P.value, !0), P.value = null) : (B = y.value.textInputOptions) != null && B.enterSubmit && t.inputValue === "" && (P.value = null, a("clear"))) : se(f);
    }, j = () => {
      var f, R;
      (f = y.value.textInputOptions) != null && f.tabSubmit && c(P.value) && t.inputValue !== "" ? (a("set-input-date", P.value, !0), P.value = null) : (R = y.value.textInputOptions) != null && R.tabSubmit && t.inputValue === "" && (P.value = null, a("clear"));
    }, le = () => {
      C.value = !0, a("focus");
    }, se = (f) => {
      var R;
      f.preventDefault(), f.stopImmediatePropagation(), f.stopPropagation(), t.textInput && ((R = y.value.textInputOptions) != null && R.openMenu) && !t.inlineWithInput ? (a("toggle"), y.value.textInputOptions.enterSubmit && a("select-date")) : t.textInput || a("toggle");
    }, ue = () => {
      a("real-blur"), C.value = !1, t.isMenuOpen || a("blur"), t.autoApply && t.textInput && P.value && !t.isMenuOpen && (a("set-input-date", P.value), a("select-date"), P.value = null);
    }, ce = () => {
      a("clear");
    }, fe = (f) => {
      if (!t.textInput) {
        if (f.code === "Tab")
          return;
        f.preventDefault();
      }
    };
    return n({
      focusInput: () => {
        var f;
        (f = F.value) == null || f.focus({ preventScroll: !0 });
      },
      setParsedDate: (f) => {
        P.value = f;
      }
    }), (f, R) => {
      var B;
      return p(), I("div", { onClick: se }, [
        f.$slots.trigger && !f.$slots["dp-input"] && !f.inline ? K(f.$slots, "trigger", { key: 0 }) : A("", !0),
        !f.$slots.trigger && (!f.inline || f.inlineWithInput) ? (p(), I("div", yl, [
          f.$slots["dp-input"] && !f.$slots.trigger && !f.inline ? K(f.$slots, "dp-input", {
            key: 0,
            value: e.inputValue,
            isMenuOpen: e.isMenuOpen,
            onInput: O,
            onEnter: G,
            onTab: j,
            onClear: ce,
            onBlur: ue,
            onKeypress: fe,
            onPaste: Y
          }) : A("", !0),
          f.$slots["dp-input"] ? A("", !0) : (p(), I("input", {
            key: 1,
            ref_key: "inputRef",
            ref: F,
            id: f.uid ? `dp-input-${f.uid}` : void 0,
            name: f.name,
            class: he(k.value),
            inputmode: f.textInput ? "text" : "none",
            placeholder: f.placeholder,
            disabled: f.disabled,
            readonly: f.readonly,
            required: f.required,
            value: e.inputValue,
            autocomplete: f.autocomplete,
            "aria-label": (B = M(y).ariaLabels) == null ? void 0 : B.input,
            onInput: O,
            onKeydown: [
              de(G, ["enter"]),
              de(j, ["tab"]),
              fe
            ],
            onBlur: ue,
            onFocus: le,
            onKeypress: fe,
            onPaste: Y
          }, null, 42, gl)),
          oe("div", {
            onClick: R[0] || (R[0] = ($) => a("toggle"))
          }, [
            f.$slots["input-icon"] && !f.hideInputIcon ? (p(), I("span", hl, [
              K(f.$slots, "input-icon")
            ])) : A("", !0),
            !f.$slots["input-icon"] && !f.hideInputIcon && !f.$slots["dp-input"] ? (p(), me(M(xt), {
              key: 1,
              class: "dp__input_icon dp__input_icons"
            })) : A("", !0)
          ]),
          f.$slots["clear-icon"] && e.inputValue && f.clearable && !f.disabled && !f.readonly ? (p(), I("span", pl, [
            K(f.$slots, "clear-icon", { clear: ce })
          ])) : A("", !0),
          f.clearable && !f.$slots["clear-icon"] && e.inputValue && !f.disabled && !f.readonly ? (p(), me(M(wa), {
            key: 3,
            class: "dp__clear_icon dp__input_icons",
            onClick: nt(ce, ["stop", "prevent"])
          }, null, 8, ["onClick"])) : A("", !0)
        ])) : A("", !0)
      ]);
    };
  }
}), wl = ["title"], bl = { class: "dp__action_buttons" }, Dl = ["onKeydown", "disabled"], $l = /* @__PURE__ */ je({
  __name: "ActionRow",
  props: {
    menuMount: { type: Boolean, default: !1 },
    internalModelValue: { type: [Date, Array], default: null },
    calendarWidth: { type: Number, default: 0 },
    ...dt
  },
  emits: ["close-picker", "select-date", "select-now", "invalid-select"],
  setup(e, { emit: n }) {
    const a = e, { formatDate: t, isValidTime: u, defaults: c } = Fe(a), { buildMatrix: y } = it(), N = H(null), V = H(null);
    We(() => {
      a.arrowNavigation && y([Me(N), Me(V)], "actionRow");
    });
    const P = L(() => a.range && !a.partialRange && a.internalModelValue ? a.internalModelValue.length === 2 : !0), F = L(() => !C.value || !d.value || !P.value), C = L(() => !a.enableTimePicker || a.ignoreTimeValidation ? !0 : u(a.internalModelValue)), d = L(() => a.monthPicker ? a.range && Array.isArray(a.internalModelValue) ? !a.internalModelValue.filter((G) => !Y(G)).length : Y(a.internalModelValue) : !0), k = () => {
      const O = c.value.previewFormat;
      return a.timePicker || a.monthPicker, O(Ae(a.internalModelValue));
    }, J = () => {
      const O = a.internalModelValue;
      return c.value.multiCalendars > 0 ? `${t(O[0])} - ${t(O[1])}` : [t(O[0]), t(O[1])];
    }, x = L(() => !a.internalModelValue || !a.menuMount ? "" : typeof c.value.previewFormat == "string" ? Array.isArray(a.internalModelValue) ? a.internalModelValue.length === 2 && a.internalModelValue[1] ? J() : a.multiDates ? a.internalModelValue.map((O) => `${t(O)}`) : a.modelAuto ? `${t(a.internalModelValue[0])}` : `${t(a.internalModelValue[0])} -` : t(a.internalModelValue) : k()), z = L(
      () => Array.isArray(x.value) ? x.value.join(a.multiDates ? "; " : " - ") : x.value
    ), Y = (O) => {
      if (!a.monthPicker)
        return !0;
      let G = !0;
      const j = T(Mt(O));
      if (a.minDate && a.maxDate) {
        const le = T(Mt(a.minDate)), se = T(Mt(a.maxDate));
        return Ve(j, le) && Ie(j, se) || ge(j, le) || ge(j, se);
      }
      if (a.minDate) {
        const le = T(Mt(a.minDate));
        G = Ve(j, le) || ge(j, le);
      }
      if (a.maxDate) {
        const le = T(Mt(a.maxDate));
        G = Ie(j, le) || ge(j, le);
      }
      return G;
    }, U = () => {
      C.value && d.value && P.value ? n("select-date") : n("invalid-select");
    };
    return (O, G) => (p(), I("div", {
      class: "dp__action_row",
      style: ot(e.calendarWidth ? { width: `${e.calendarWidth}px` } : {})
    }, [
      O.$slots["action-row"] ? K(O.$slots, "action-row", Re(Pe({ key: 0 }, {
        internalModelValue: e.internalModelValue,
        disabled: F.value,
        selectDate: () => O.$emit("select-date"),
        closePicker: () => O.$emit("close-picker")
      }))) : (p(), I(ye, { key: 1 }, [
        M(c).actionRow.showPreview ? (p(), I("div", {
          key: 0,
          class: "dp__selection_preview",
          title: z.value
        }, [
          O.$slots["action-preview"] ? K(O.$slots, "action-preview", {
            key: 0,
            value: e.internalModelValue
          }) : A("", !0),
          O.$slots["action-preview"] ? A("", !0) : (p(), I(ye, { key: 1 }, [
            Ze(Oe(z.value), 1)
          ], 64))
        ], 8, wl)) : A("", !0),
        oe("div", bl, [
          O.$slots["action-buttons"] ? K(O.$slots, "action-buttons", {
            key: 0,
            value: e.internalModelValue
          }) : A("", !0),
          O.$slots["action-buttons"] ? A("", !0) : (p(), I(ye, { key: 1 }, [
            !O.inline && M(c).actionRow.showCancel ? (p(), I("button", {
              key: 0,
              type: "button",
              ref_key: "cancelButtonRef",
              ref: N,
              class: "dp__action_button dp__action_cancel",
              onClick: G[0] || (G[0] = (j) => O.$emit("close-picker")),
              onKeydown: [
                G[1] || (G[1] = de((j) => O.$emit("close-picker"), ["enter"])),
                G[2] || (G[2] = de((j) => O.$emit("close-picker"), ["space"]))
              ]
            }, Oe(O.cancelText), 545)) : A("", !0),
            O.showNowButton || M(c).actionRow.showNow ? (p(), I("button", {
              key: 1,
              type: "button",
              ref_key: "cancelButtonRef",
              ref: N,
              class: "dp__action_button dp__action_cancel",
              onClick: G[3] || (G[3] = (j) => O.$emit("select-now")),
              onKeydown: [
                G[4] || (G[4] = de((j) => O.$emit("select-now"), ["enter"])),
                G[5] || (G[5] = de((j) => O.$emit("select-now"), ["space"]))
              ]
            }, Oe(O.nowButtonLabel), 545)) : A("", !0),
            M(c).actionRow.showSelect ? (p(), I("button", {
              key: 2,
              type: "button",
              class: "dp__action_button dp__action_select",
              onKeydown: [
                de(U, ["enter"]),
                de(U, ["space"])
              ],
              onClick: U,
              disabled: F.value,
              ref_key: "selectButtonRef",
              ref: V
            }, Oe(O.selectText), 41, Dl)) : A("", !0)
          ], 64))
        ])
      ], 64))
    ], 4));
  }
}), Ml = ["aria-label"], Tl = {
  class: "dp__calendar_header",
  role: "row"
}, Sl = {
  key: 0,
  class: "dp__calendar_header_item",
  role: "gridcell"
}, Al = /* @__PURE__ */ oe("div", { class: "dp__calendar_header_separator" }, null, -1), Pl = ["aria-label"], Cl = {
  key: 0,
  role: "gridcell",
  class: "dp__calendar_item dp__week_num"
}, Nl = { class: "dp__cell_inner" }, _l = ["aria-selected", "aria-disabled", "aria-label", "onClick", "onKeydown", "onMouseenter", "onMouseleave"], Rl = /* @__PURE__ */ je({
  __name: "Calendar",
  props: {
    mappedDates: { type: Array, default: () => [] },
    getWeekNum: {
      type: Function,
      default: () => ""
    },
    specificMode: { type: Boolean, default: !1 },
    instance: { type: Number, default: 0 },
    month: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    ...dt
  },
  emits: [
    "select-date",
    "set-hover-date",
    "handle-scroll",
    "mount",
    "handle-swipe",
    "handle-space",
    "tooltip-open",
    "tooltip-close"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { buildMultiLevelMatrix: u } = it(), { setDateMonthOrYear: c, defaults: y } = Fe(t), N = H(null), V = H({
      bottom: "",
      left: "",
      transform: ""
    }), P = H([]), F = H(null), C = H(!0), d = H(""), k = H({ startX: 0, endX: 0, startY: 0, endY: 0 }), J = H([]), x = H({ left: "50%" }), z = L(() => t.dayNames ? Array.isArray(t.dayNames) ? t.dayNames : t.dayNames(t.locale, +t.weekStart) : Xa(t.locale, +t.weekStart));
    We(() => {
      a("mount", { cmp: "calendar", refs: P }), t.noSwipe || F.value && (F.value.addEventListener("touchstart", _, { passive: !1 }), F.value.addEventListener("touchend", b, { passive: !1 }), F.value.addEventListener("touchmove", f, { passive: !1 })), t.monthChangeOnScroll && F.value && F.value.addEventListener("wheel", $, { passive: !1 });
    });
    const Y = (m) => m ? t.vertical ? "vNext" : "next" : t.vertical ? "vPrevious" : "previous", U = (m, i) => {
      if (t.transitions) {
        const r = ze(c(T(), t.month, t.year));
        d.value = Ve(ze(c(T(), m, i)), r) ? y.value.transitions[Y(!0)] : y.value.transitions[Y(!1)], C.value = !1, at(() => {
          C.value = !0;
        });
      }
    }, O = L(
      () => ({
        [t.calendarClassName]: !!t.calendarClassName
      })
    ), G = L(() => (m) => {
      const i = tl(m);
      return {
        dp__marker_dot: i.type === "dot",
        dp__marker_line: i.type === "line"
      };
    }), j = L(() => (m) => ge(m, N.value)), le = L(() => ({
      dp__calendar: !0,
      dp__calendar_next: y.value.multiCalendars > 0 && t.instance !== 0
    })), se = L(() => (m) => t.hideOffsetDates ? m.current : !0), ue = L(() => t.specificMode ? { height: `${t.modeHeight}px` } : void 0), ce = async (m, i, r) => {
      var l, g;
      if (a("set-hover-date", m), (g = (l = m.marker) == null ? void 0 : l.tooltip) != null && g.length) {
        const D = Me(P.value[i][r]);
        if (D) {
          const { width: S, height: Q } = D.getBoundingClientRect();
          N.value = m.value;
          let v = { left: `${S / 2}px` }, o = -50;
          if (await at(), J.value[0]) {
            const { left: E, width: ee } = J.value[0].getBoundingClientRect();
            E < 0 && (v = { left: "0" }, o = 0, x.value.left = `${S / 2}px`), window.innerWidth < E + ee && (v = { right: "0" }, o = 0, x.value.left = `${ee - S / 2}px`);
          }
          V.value = {
            bottom: `${Q}px`,
            ...v,
            transform: `translateX(${o}%)`
          }, a("tooltip-open", m.marker);
        }
      }
    }, fe = (m) => {
      N.value && (N.value = null, V.value = JSON.parse(JSON.stringify({ bottom: "", left: "", transform: "" })), a("tooltip-close", m.marker));
    }, _ = (m) => {
      k.value.startX = m.changedTouches[0].screenX, k.value.startY = m.changedTouches[0].screenY;
    }, b = (m) => {
      k.value.endX = m.changedTouches[0].screenX, k.value.endY = m.changedTouches[0].screenY, R();
    }, f = (m) => {
      t.vertical && !t.inline && m.preventDefault();
    }, R = () => {
      const m = t.vertical ? "Y" : "X";
      Math.abs(k.value[`start${m}`] - k.value[`end${m}`]) > 10 && a("handle-swipe", k.value[`start${m}`] > k.value[`end${m}`] ? "right" : "left");
    }, B = (m, i, r) => {
      m && (Array.isArray(P.value[i]) ? P.value[i][r] = m : P.value[i] = [m]), t.arrowNavigation && u(P.value, "calendar");
    }, $ = (m) => {
      t.monthChangeOnScroll && (m.preventDefault(), a("handle-scroll", m));
    };
    return n({ triggerTransition: U }), (m, i) => {
      var r;
      return p(), I("div", {
        class: he(le.value)
      }, [
        oe("div", {
          style: ot(ue.value),
          ref_key: "calendarWrapRef",
          ref: F,
          role: "grid",
          class: he(O.value),
          "aria-label": (r = M(y).ariaLabels) == null ? void 0 : r.calendarWrap
        }, [
          e.specificMode ? A("", !0) : (p(), I(ye, { key: 0 }, [
            oe("div", Tl, [
              m.weekNumbers ? (p(), I("div", Sl, Oe(m.weekNumName), 1)) : A("", !0),
              (p(!0), I(ye, null, Ce(z.value, (l, g) => (p(), I("div", {
                class: "dp__calendar_header_item",
                role: "gridcell",
                key: g
              }, [
                m.$slots["calendar-header"] ? K(m.$slots, "calendar-header", {
                  key: 0,
                  day: l,
                  index: g
                }) : A("", !0),
                m.$slots["calendar-header"] ? A("", !0) : (p(), I(ye, { key: 1 }, [
                  Ze(Oe(l), 1)
                ], 64))
              ]))), 128))
            ]),
            Al,
            gt(wt, {
              name: d.value,
              css: !!m.transitions
            }, {
              default: ie(() => {
                var l;
                return [
                  C.value ? (p(), I("div", {
                    key: 0,
                    class: "dp__calendar",
                    role: "grid",
                    "aria-label": (l = M(y).ariaLabels) == null ? void 0 : l.calendarDays
                  }, [
                    (p(!0), I(ye, null, Ce(e.mappedDates, (g, D) => (p(), I("div", {
                      class: "dp__calendar_row",
                      role: "row",
                      key: D
                    }, [
                      m.weekNumbers ? (p(), I("div", Cl, [
                        oe("div", Nl, Oe(e.getWeekNum(g.days)), 1)
                      ])) : A("", !0),
                      (p(!0), I(ye, null, Ce(g.days, (S, Q) => {
                        var v, o, E;
                        return p(), I("div", {
                          role: "gridcell",
                          class: "dp__calendar_item",
                          ref_for: !0,
                          ref: (ee) => B(ee, D, Q),
                          key: Q + D,
                          "aria-selected": S.classData.dp__active_date || S.classData.dp__range_start || S.classData.dp__range_start,
                          "aria-disabled": S.classData.dp__cell_disabled,
                          "aria-label": (o = (v = M(y).ariaLabels) == null ? void 0 : v.day) == null ? void 0 : o.call(v, S),
                          tabindex: "0",
                          onClick: nt((ee) => m.$emit("select-date", S), ["stop", "prevent"]),
                          onKeydown: [
                            de((ee) => m.$emit("select-date", S), ["enter"]),
                            de((ee) => m.$emit("handle-space", S), ["space"])
                          ],
                          onMouseenter: (ee) => ce(S, D, Q),
                          onMouseleave: (ee) => fe(S)
                        }, [
                          oe("div", {
                            class: he(["dp__cell_inner", S.classData])
                          }, [
                            m.$slots.day && se.value(S) ? K(m.$slots, "day", {
                              key: 0,
                              day: +S.text,
                              date: S.value
                            }) : A("", !0),
                            m.$slots.day ? A("", !0) : (p(), I(ye, { key: 1 }, [
                              Ze(Oe(S.text), 1)
                            ], 64)),
                            S.marker && se.value(S) ? (p(), I("div", {
                              key: 2,
                              class: he(G.value(S.marker)),
                              style: ot(S.marker.color ? { backgroundColor: S.marker.color } : {})
                            }, null, 6)) : A("", !0),
                            j.value(S.value) ? (p(), I("div", {
                              key: 3,
                              class: "dp__marker_tooltip",
                              ref_for: !0,
                              ref_key: "activeTooltip",
                              ref: J,
                              style: ot(V.value)
                            }, [
                              (E = S.marker) != null && E.tooltip ? (p(), I("div", {
                                key: 0,
                                class: "dp__tooltip_content",
                                onClick: i[0] || (i[0] = nt(() => {
                                }, ["stop"]))
                              }, [
                                (p(!0), I(ye, null, Ce(S.marker.tooltip, (ee, ke) => (p(), I("div", {
                                  key: ke,
                                  class: "dp__tooltip_text"
                                }, [
                                  m.$slots["marker-tooltip"] ? K(m.$slots, "marker-tooltip", {
                                    key: 0,
                                    tooltip: ee,
                                    day: S.value
                                  }) : A("", !0),
                                  m.$slots["marker-tooltip"] ? A("", !0) : (p(), I(ye, { key: 1 }, [
                                    oe("div", {
                                      class: "dp__tooltip_mark",
                                      style: ot(ee.color ? { backgroundColor: ee.color } : {})
                                    }, null, 4),
                                    oe("div", null, Oe(ee.text), 1)
                                  ], 64))
                                ]))), 128)),
                                oe("div", {
                                  class: "dp__arrow_bottom_tp",
                                  style: ot(x.value)
                                }, null, 4)
                              ])) : A("", !0)
                            ], 4)) : A("", !0)
                          ], 2)
                        ], 40, _l);
                      }), 128))
                    ]))), 128))
                  ], 8, Pl)) : A("", !0)
                ];
              }),
              _: 3
            }, 8, ["name", "css"])
          ], 64))
        ], 14, Ml)
      ], 2);
    };
  }
}), Ol = ["aria-label", "aria-disabled"], sn = /* @__PURE__ */ je({
  __name: "ActionIcon",
  props: {
    ariaLabel: {},
    disabled: { type: Boolean }
  },
  emits: ["activate", "set-ref"],
  setup(e, { emit: n }) {
    const a = H(null);
    return We(() => n("set-ref", a)), (t, u) => (p(), I("button", {
      type: "button",
      class: "dp__btn dp__month_year_col_nav",
      onClick: u[0] || (u[0] = (c) => t.$emit("activate")),
      onKeydown: [
        u[1] || (u[1] = de((c) => t.$emit("activate"), ["enter"])),
        u[2] || (u[2] = de((c) => t.$emit("activate"), ["space"]))
      ],
      tabindex: "0",
      "aria-label": t.ariaLabel,
      "aria-disabled": t.disabled,
      ref_key: "elRef",
      ref: a
    }, [
      oe("span", {
        class: he(["dp__inner_nav", { dp__inner_nav_disabled: t.disabled }])
      }, [
        K(t.$slots, "default")
      ], 2)
    ], 40, Ol));
  }
}), Il = ["onKeydown"], Bl = { class: "dp__selection_grid_header" }, Yl = ["aria-selected", "aria-disabled", "onClick", "onKeydown", "onMouseover"], Vl = ["aria-label", "onKeydown"], Pt = /* @__PURE__ */ je({
  __name: "SelectionGrid",
  props: {
    items: { type: Array, default: () => [] },
    modelValue: { type: [String, Number], default: null },
    multiModelValue: { type: Array, default: () => [] },
    disabledValues: { type: Array, default: () => [] },
    minValue: { type: [Number, String], default: null },
    maxValue: { type: [Number, String], default: null },
    year: { type: Number, default: 0 },
    skipActive: { type: Boolean, default: !1 },
    headerRefs: { type: Array, default: () => [] },
    skipButtonRef: { type: Boolean, default: !1 },
    monthPicker: { type: Boolean, default: !1 },
    yearPicker: { type: Boolean, default: !1 },
    escClose: { type: Boolean, default: !0 },
    type: { type: String, default: null },
    arrowNavigation: { type: Boolean, default: !1 },
    autoApply: { type: Boolean, default: !1 },
    textInput: { type: Boolean, default: !1 },
    ariaLabels: { type: Object, default: () => ({}) },
    hideNavigation: { type: Array, default: () => [] }
  },
  emits: ["update:model-value", "selected", "toggle", "reset-flow"],
  setup(e, { expose: n, emit: a }) {
    const t = e, { setSelectionGrid: u, buildMultiLevelMatrix: c, setMonthPicker: y } = it(), { hideNavigationButtons: N } = Fe(t), V = H(!1), P = H(null), F = H(null), C = H([]), d = H(), k = H(null), J = H(0), x = H(null);
    oa(() => {
      P.value = null;
    }), We(() => {
      at().then(() => ce()), Y(), z(!0);
    }), hn(() => z(!1));
    const z = ($) => {
      var m;
      t.arrowNavigation && ((m = t.headerRefs) != null && m.length ? y($) : u($));
    }, Y = () => {
      const $ = Me(F);
      $ && (t.textInput || $.focus({ preventScroll: !0 }), V.value = $.clientHeight < $.scrollHeight);
    }, U = L(
      () => ({
        dp__overlay: !0
      })
    ), O = L(() => ({
      dp__overlay_col: !0
    })), G = ($) => t.skipActive ? !1 : $.value === t.modelValue, j = L(() => t.items.map(($) => $.filter((m) => m).map((m) => {
      var l, g, D;
      const i = t.disabledValues.some((S) => S === m.value) || ue(m.value), r = (l = t.multiModelValue) != null && l.length ? (g = t.multiModelValue) == null ? void 0 : g.some(
        (S) => ge(
          S,
          st(
            t.monthPicker ? Ut(/* @__PURE__ */ new Date(), m.value) : /* @__PURE__ */ new Date(),
            t.monthPicker ? t.year : m.value
          )
        )
      ) : G(m);
      return {
        ...m,
        className: {
          dp__overlay_cell_active: r,
          dp__overlay_cell: !r,
          dp__overlay_cell_disabled: i,
          dp__overlay_cell_active_disabled: i && r,
          dp__overlay_cell_pad: !0,
          dp__cell_in_between: (D = t.multiModelValue) != null && D.length && t.skipActive ? _(m.value) : !1
        }
      };
    }))), le = L(
      () => ({
        dp__button: !0,
        dp__overlay_action: !0,
        dp__over_action_scroll: V.value,
        dp__button_bottom: t.autoApply
      })
    ), se = L(() => {
      var $, m;
      return {
        dp__overlay_container: !0,
        dp__container_flex: (($ = t.items) == null ? void 0 : $.length) <= 6,
        dp__container_block: ((m = t.items) == null ? void 0 : m.length) > 6
      };
    }), ue = ($) => {
      const m = t.maxValue || t.maxValue === 0, i = t.minValue || t.minValue === 0;
      return !m && !i ? !1 : m && i ? +$ > +t.maxValue || +$ < +t.minValue : m ? +$ > +t.maxValue : i ? +$ < +t.minValue : !1;
    }, ce = () => {
      const $ = Me(P), m = Me(F), i = Me(k), r = Me(x), l = i ? i.getBoundingClientRect().height : 0;
      m && (J.value = m.getBoundingClientRect().height - l), $ && r && (r.scrollTop = $.offsetTop - r.offsetTop - (J.value / 2 - $.getBoundingClientRect().height) - l);
    }, fe = ($) => {
      !t.disabledValues.some((m) => m === $) && !ue($) && (a("update:model-value", $), a("selected"));
    }, _ = ($) => {
      const m = t.monthPicker ? t.year : $;
      return Jn(
        t.multiModelValue,
        st(
          t.monthPicker ? Ut(/* @__PURE__ */ new Date(), d.value || 0) : /* @__PURE__ */ new Date(),
          t.monthPicker ? m : d.value || m
        ),
        st(t.monthPicker ? Ut(/* @__PURE__ */ new Date(), $) : /* @__PURE__ */ new Date(), m)
      );
    }, b = () => {
      a("toggle"), a("reset-flow");
    }, f = () => {
      t.escClose && b();
    }, R = ($, m, i, r) => {
      $ && (m.value === +t.modelValue && !t.disabledValues.includes(m.value) && (P.value = $), t.arrowNavigation && (Array.isArray(C.value[i]) ? C.value[i][r] = $ : C.value[i] = [$], B()));
    }, B = () => {
      var m, i;
      const $ = (m = t.headerRefs) != null && m.length ? [t.headerRefs].concat(C.value) : C.value.concat([t.skipButtonRef ? [] : [k.value]]);
      c(Ae($), (i = t.headerRefs) != null && i.length ? "monthPicker" : "selectionGrid");
    };
    return n({ focusGrid: Y }), ($, m) => {
      var i;
      return p(), I("div", {
        ref_key: "gridWrapRef",
        ref: F,
        class: he(U.value),
        role: "dialog",
        tabindex: "0",
        onKeydown: de(f, ["esc"])
      }, [
        oe("div", {
          class: he(se.value),
          ref_key: "containerRef",
          ref: x,
          role: "grid",
          style: ot({ height: `${J.value}px` })
        }, [
          oe("div", Bl, [
            K($.$slots, "header")
          ]),
          $.$slots.overlay ? K($.$slots, "overlay", { key: 0 }) : (p(!0), I(ye, { key: 1 }, Ce(j.value, (r, l) => (p(), I("div", {
            class: he(["dp__overlay_row", { dp__flex_row: j.value.length >= 3 }]),
            key: l,
            role: "row"
          }, [
            (p(!0), I(ye, null, Ce(r, (g, D) => (p(), I("div", {
              role: "gridcell",
              class: he(O.value),
              key: g.value,
              "aria-selected": g.value === e.modelValue && !e.disabledValues.includes(g.value),
              "aria-disabled": g.className.dp__overlay_cell_disabled,
              ref_for: !0,
              ref: (S) => R(S, g, l, D),
              tabindex: "0",
              onClick: (S) => fe(g.value),
              onKeydown: [
                de((S) => fe(g.value), ["enter"]),
                de((S) => fe(g.value), ["space"])
              ],
              onMouseover: (S) => d.value = g.value
            }, [
              oe("div", {
                class: he(g.className)
              }, [
                $.$slots.item ? K($.$slots, "item", {
                  key: 0,
                  item: g
                }) : A("", !0),
                $.$slots.item ? A("", !0) : (p(), I(ye, { key: 1 }, [
                  Ze(Oe(g.text), 1)
                ], 64))
              ], 2)
            ], 42, Yl))), 128))
          ], 2))), 128))
        ], 6),
        $.$slots["button-icon"] ? Et((p(), I("div", {
          key: 0,
          role: "button",
          "aria-label": (i = e.ariaLabels) == null ? void 0 : i.toggleOverlay,
          class: he(le.value),
          tabindex: "0",
          ref_key: "toggleButton",
          ref: k,
          onClick: b,
          onKeydown: de(b, ["enter"])
        }, [
          K($.$slots, "button-icon")
        ], 42, Vl)), [
          [Lt, !M(N)(e.type)]
        ]) : A("", !0)
      ], 42, Il);
    };
  }
}), El = ["aria-label"], Hn = /* @__PURE__ */ je({
  __name: "RegularPicker",
  props: {
    ariaLabel: { type: String, default: "" },
    showSelectionGrid: { type: Boolean, default: !1 },
    modelValue: { type: Number, default: null },
    items: { type: Array, default: () => [] },
    disabledValues: { type: Array, default: () => [] },
    minValue: { type: Number, default: null },
    maxValue: { type: Number, default: null },
    slotName: { type: String, default: "" },
    overlaySlot: { type: String, default: "" },
    headerRefs: { type: Array, default: () => [] },
    escClose: { type: Boolean, default: !0 },
    type: { type: String, default: null },
    transitions: { type: [Object, Boolean], default: !1 },
    arrowNavigation: { type: Boolean, default: !1 },
    autoApply: { type: Boolean, default: !1 },
    textInput: { type: Boolean, default: !1 },
    ariaLabels: { type: Object, default: () => ({}) },
    hideNavigation: { type: Array, default: () => [] }
  },
  emits: ["update:model-value", "toggle", "set-ref"],
  setup(e, { emit: n }) {
    const a = e, { transitionName: t, showTransition: u } = zt(a.transitions), c = H(null);
    return We(() => n("set-ref", c)), (y, N) => (p(), I(ye, null, [
      oe("button", {
        type: "button",
        class: "dp__btn dp__month_year_select",
        onClick: N[0] || (N[0] = (V) => y.$emit("toggle")),
        onKeydown: [
          N[1] || (N[1] = de((V) => y.$emit("toggle"), ["enter"])),
          N[2] || (N[2] = de((V) => y.$emit("toggle"), ["space"]))
        ],
        "aria-label": e.ariaLabel,
        tabindex: "0",
        ref_key: "elRef",
        ref: c
      }, [
        K(y.$slots, "default")
      ], 40, El),
      gt(wt, {
        name: M(t)(e.showSelectionGrid),
        css: M(u)
      }, {
        default: ie(() => [
          e.showSelectionGrid ? (p(), me(Pt, Pe({ key: 0 }, {
            modelValue: e.modelValue,
            items: e.items,
            disabledValues: e.disabledValues,
            minValue: e.minValue,
            maxValue: e.maxValue,
            escClose: e.escClose,
            type: e.type,
            arrowNavigation: e.arrowNavigation,
            textInput: e.textInput,
            autoApply: e.autoApply,
            ariaLabels: e.ariaLabels,
            hideNavigation: e.hideNavigation
          }, {
            "header-refs": [],
            "onUpdate:modelValue": N[3] || (N[3] = (V) => y.$emit("update:model-value", V)),
            onToggle: N[4] || (N[4] = (V) => y.$emit("toggle"))
          }), Le({
            "button-icon": ie(() => [
              y.$slots["calendar-icon"] ? K(y.$slots, "calendar-icon", { key: 0 }) : A("", !0),
              y.$slots["calendar-icon"] ? A("", !0) : (p(), me(M(xt), { key: 1 }))
            ]),
            _: 2
          }, [
            y.$slots[e.slotName] ? {
              name: "item",
              fn: ie(({ item: V }) => [
                K(y.$slots, e.slotName, { item: V })
              ]),
              key: "0"
            } : void 0,
            y.$slots[e.overlaySlot] ? {
              name: "overlay",
              fn: ie(() => [
                K(y.$slots, e.overlaySlot)
              ]),
              key: "1"
            } : void 0,
            y.$slots[`${e.overlaySlot}-header`] ? {
              name: "header",
              fn: ie(() => [
                K(y.$slots, `${e.overlaySlot}-header`)
              ]),
              key: "2"
            } : void 0
          ]), 1040)) : A("", !0)
        ]),
        _: 3
      }, 8, ["name", "css"])
    ], 64));
  }
}), Ll = { class: "dp__month_year_row" }, Fl = { class: "dp__month_picker_header" }, Ul = ["aria-label"], Wl = ["aria-label"], Hl = ["aria-label"], xl = /* @__PURE__ */ je({
  __name: "MonthYearPicker",
  props: {
    month: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    instance: { type: Number, default: 0 },
    years: { type: Array, default: () => [] },
    months: { type: Array, default: () => [] },
    internalModelValue: { type: [Date, Array], default: null },
    ...dt
  },
  emits: ["update-month-year", "month-year-select", "mount", "reset-flow", "overlay-closed"],
  setup(e, { expose: n, emit: a }) {
    const t = e, { defaults: u } = Fe(t), { transitionName: c, showTransition: y } = zt(u.value.transitions), { buildMatrix: N } = it(), { handleMonthYearChange: V, isDisabled: P, updateMonthYear: F } = cl(t, a), C = H(!1), d = H(!1), k = H([null, null, null, null]), J = H(null), x = H(null), z = H(null);
    We(() => {
      a("mount");
    });
    const Y = (v) => ({
      get: () => t[v],
      set: (o) => {
        const E = v === "month" ? "year" : "month";
        a("update-month-year", { [v]: o, [E]: t[E] }), a("month-year-select", v === "year"), v === "month" ? l(!0) : g(!0);
      }
    }), U = L(Y("month")), O = L(Y("year")), G = (v) => {
      const o = we(T(v));
      return t.year === o;
    }, j = L(() => t.monthPicker ? Array.isArray(t.disabledDates) ? t.disabledDates.map((v) => T(v)).filter((v) => G(v)).map((v) => pe(v)) : [] : []), le = L(() => (v) => {
      const o = v === "month";
      return {
        showSelectionGrid: (o ? C : d).value,
        items: (o ? B : $).value,
        disabledValues: u.value.filters[o ? "months" : "years"].concat(j.value),
        minValue: (o ? fe : ue).value,
        maxValue: (o ? _ : ce).value,
        headerRefs: o && t.monthPicker ? [J.value, x.value, z.value] : [],
        escClose: t.escClose,
        transitions: u.value.transitions,
        ariaLabels: u.value.ariaLabels,
        textInput: t.textInput,
        autoApply: t.autoApply,
        arrowNavigation: t.arrowNavigation,
        hideNavigation: t.hideNavigation
      };
    }), se = L(() => (v) => ({
      month: t.month,
      year: t.year,
      items: v === "month" ? t.months : t.years,
      instance: t.instance,
      updateMonthYear: F,
      toggle: v === "month" ? l : g
    })), ue = L(() => t.minDate ? we(T(t.minDate)) : null), ce = L(() => t.maxDate ? we(T(t.maxDate)) : null), fe = L(() => {
      if (t.minDate && ue.value) {
        if (ue.value > t.year)
          return 12;
        if (ue.value === t.year)
          return pe(T(t.minDate));
      }
      return null;
    }), _ = L(() => t.maxDate && ce.value ? ce.value < t.year ? -1 : ce.value === t.year ? pe(T(t.maxDate)) : null : null), b = L(() => (t.range || t.multiDates) && t.internalModelValue && (t.monthPicker || t.yearPicker) ? t.internalModelValue : []), f = (v) => {
      const o = [], E = (ee) => ee;
      for (let ee = 0; ee < v.length; ee += 3) {
        const ke = [v[ee], v[ee + 1], v[ee + 2]];
        o.push(E(ke));
      }
      return o;
    }, R = L(() => {
      const v = t.months.find((o) => o.value === t.month);
      return v || { text: "", value: 0 };
    }), B = L(() => f(t.months)), $ = L(() => f(t.years)), m = L(() => u.value.multiCalendars ? t.multiCalendarsSolo ? !0 : t.instance === 0 : !0), i = L(() => u.value.multiCalendars ? t.multiCalendarsSolo ? !0 : t.instance === u.value.multiCalendars - 1 : !0), r = (v, o) => {
      o !== void 0 ? v.value = o : v.value = !v.value;
    }, l = (v = !1, o) => {
      D(v), r(C, o), C.value || a("overlay-closed");
    }, g = (v = !1, o) => {
      D(v), r(d, o), d.value || a("overlay-closed");
    }, D = (v) => {
      v || a("reset-flow");
    }, S = (v = !1) => {
      P.value(v) || a("update-month-year", {
        year: v ? t.year + 1 : t.year - 1,
        month: t.month,
        fromNav: !0
      });
    }, Q = (v, o) => {
      t.arrowNavigation && (k.value[o] = Me(v), N(k.value, "monthYear"));
    };
    return n({
      toggleMonthPicker: l,
      toggleYearPicker: g,
      handleMonthYearChange: V
    }), (v, o) => {
      var E, ee, ke, He, qe;
      return p(), I("div", Ll, [
        v.$slots["month-year"] ? K(v.$slots, "month-year", Re(Pe({ key: 0 }, { month: e.month, year: e.year, months: e.months, years: e.years, updateMonthYear: M(F), handleMonthYearChange: M(V), instance: e.instance }))) : (p(), I(ye, { key: 1 }, [
          !v.monthPicker && !v.yearPicker ? (p(), I(ye, { key: 0 }, [
            m.value && !v.vertical ? (p(), me(sn, {
              key: 0,
              "aria-label": (E = M(u).ariaLabels) == null ? void 0 : E.prevMonth,
              disabled: M(P)(!1),
              onActivate: o[0] || (o[0] = (ne) => M(V)(!1)),
              onSetRef: o[1] || (o[1] = (ne) => Q(ne, 0))
            }, {
              default: ie(() => [
                v.$slots["arrow-left"] ? K(v.$slots, "arrow-left", { key: 0 }) : A("", !0),
                v.$slots["arrow-left"] ? A("", !0) : (p(), me(M(Pn), { key: 1 }))
              ]),
              _: 3
            }, 8, ["aria-label", "disabled"])) : A("", !0),
            oe("div", {
              class: he(["dp__month_year_wrap", {
                dp__year_disable_select: t.disableYearSelect
              }])
            }, [
              gt(Hn, Pe({
                type: "month",
                "slot-name": "month-overlay-val",
                "overlay-slot": "overlay-month",
                "aria-label": (ee = M(u).ariaLabels) == null ? void 0 : ee.openMonthsOverlay,
                modelValue: U.value,
                "onUpdate:modelValue": o[2] || (o[2] = (ne) => U.value = ne)
              }, le.value("month"), {
                onToggle: l,
                onSetRef: o[3] || (o[3] = (ne) => Q(ne, 1))
              }), Le({
                default: ie(() => [
                  v.$slots.month ? K(v.$slots, "month", Re(Pe({ key: 0 }, R.value))) : A("", !0),
                  v.$slots.month ? A("", !0) : (p(), I(ye, { key: 1 }, [
                    Ze(Oe(R.value.text), 1)
                  ], 64))
                ]),
                _: 2
              }, [
                v.$slots["calendar-icon"] ? {
                  name: "calendar-icon",
                  fn: ie(() => [
                    K(v.$slots, "calendar-icon")
                  ]),
                  key: "0"
                } : void 0,
                v.$slots["month-overlay-value"] ? {
                  name: "month-overlay-val",
                  fn: ie(({ item: ne }) => [
                    K(v.$slots, "month-overlay-value", {
                      text: ne.text,
                      value: ne.value
                    })
                  ]),
                  key: "1"
                } : void 0,
                v.$slots["month-overlay"] ? {
                  name: "overlay-month",
                  fn: ie(() => [
                    K(v.$slots, "month-overlay", Re(xe(se.value("month"))))
                  ]),
                  key: "2"
                } : void 0,
                v.$slots["month-overlay-header"] ? {
                  name: "overlay-month-header",
                  fn: ie(() => [
                    K(v.$slots, "month-overlay-header", { toggle: l })
                  ]),
                  key: "3"
                } : void 0
              ]), 1040, ["aria-label", "modelValue"]),
              t.disableYearSelect ? A("", !0) : (p(), me(Hn, Pe({
                key: 0,
                type: "year",
                "slot-name": "year-overlay-val",
                "overlay-slot": "overlay-year",
                "aria-label": (ke = M(u).ariaLabels) == null ? void 0 : ke.openYearsOverlay,
                modelValue: O.value,
                "onUpdate:modelValue": o[4] || (o[4] = (ne) => O.value = ne)
              }, le.value("year"), {
                onToggle: g,
                onSetRef: o[5] || (o[5] = (ne) => Q(ne, 2))
              }), Le({
                default: ie(() => [
                  v.$slots.year ? K(v.$slots, "year", {
                    key: 0,
                    year: e.year
                  }) : A("", !0),
                  v.$slots.year ? A("", !0) : (p(), I(ye, { key: 1 }, [
                    Ze(Oe(e.year), 1)
                  ], 64))
                ]),
                _: 2
              }, [
                v.$slots["calendar-icon"] ? {
                  name: "calendar-icon",
                  fn: ie(() => [
                    K(v.$slots, "calendar-icon")
                  ]),
                  key: "0"
                } : void 0,
                v.$slots["year-overlay-value"] ? {
                  name: "year-overlay-val",
                  fn: ie(({ item: ne }) => [
                    K(v.$slots, "year-overlay-value", {
                      text: ne.text,
                      value: ne.value
                    })
                  ]),
                  key: "1"
                } : void 0,
                v.$slots["year-overlay"] ? {
                  name: "overlay-year",
                  fn: ie(() => [
                    K(v.$slots, "year-overlay", Re(xe(se.value("year"))))
                  ]),
                  key: "2"
                } : void 0,
                v.$slots["year-overlay-header"] ? {
                  name: "overlay-year-header",
                  fn: ie(() => [
                    K(v.$slots, "year-overlay-header", { toggle: g })
                  ]),
                  key: "3"
                } : void 0
              ]), 1040, ["aria-label", "modelValue"]))
            ], 2),
            m.value && v.vertical ? (p(), me(sn, {
              key: 1,
              "aria-label": (He = M(u).ariaLabels) == null ? void 0 : He.prevMonth,
              disabled: M(P)(!1),
              onActivate: o[6] || (o[6] = (ne) => M(V)(!1))
            }, {
              default: ie(() => [
                v.$slots["arrow-up"] ? K(v.$slots, "arrow-up", { key: 0 }) : A("", !0),
                v.$slots["arrow-up"] ? A("", !0) : (p(), me(M(qn), { key: 1 }))
              ]),
              _: 3
            }, 8, ["aria-label", "disabled"])) : A("", !0),
            i.value ? (p(), me(sn, {
              key: 2,
              ref: "rightIcon",
              disabled: M(P)(!0),
              "aria-label": (qe = M(u).ariaLabels) == null ? void 0 : qe.nextMonth,
              onActivate: o[7] || (o[7] = (ne) => M(V)(!0)),
              onSetRef: o[8] || (o[8] = (ne) => Q(ne, 3))
            }, {
              default: ie(() => [
                v.$slots[v.vertical ? "arrow-down" : "arrow-right"] ? K(v.$slots, v.vertical ? "arrow-down" : "arrow-right", { key: 0 }) : A("", !0),
                v.$slots[v.vertical ? "arrow-down" : "arrow-right"] ? A("", !0) : (p(), me(xn(v.vertical ? M(Xn) : M(Cn)), { key: 1 }))
              ]),
              _: 3
            }, 8, ["disabled", "aria-label"])) : A("", !0)
          ], 64)) : A("", !0),
          v.monthPicker ? (p(), me(Pt, Pe({ key: 1 }, le.value("month"), {
            "skip-active": v.range,
            year: e.year,
            "multi-model-value": b.value,
            "month-picker": "",
            modelValue: U.value,
            "onUpdate:modelValue": o[17] || (o[17] = (ne) => U.value = ne),
            onToggle: l,
            onSelected: o[18] || (o[18] = (ne) => v.$emit("overlay-closed"))
          }), Le({
            header: ie(() => {
              var ne, Xe, Ee;
              return [
                oe("div", Fl, [
                  oe("div", {
                    class: "dp__month_year_col_nav",
                    tabindex: "0",
                    ref_key: "mpPrevIconRef",
                    ref: J,
                    onClick: o[9] || (o[9] = (Se) => S(!1)),
                    onKeydown: o[10] || (o[10] = de((Se) => S(!1), ["enter"]))
                  }, [
                    oe("div", {
                      class: he(["dp__inner_nav", { dp__inner_nav_disabled: M(P)(!1) }]),
                      role: "button",
                      "aria-label": (ne = M(u).ariaLabels) == null ? void 0 : ne.prevMonth
                    }, [
                      v.$slots["arrow-left"] ? K(v.$slots, "arrow-left", { key: 0 }) : A("", !0),
                      v.$slots["arrow-left"] ? A("", !0) : (p(), me(M(Pn), { key: 1 }))
                    ], 10, Ul)
                  ], 544),
                  oe("div", {
                    class: "dp__pointer",
                    role: "button",
                    ref_key: "mpYearButtonRef",
                    ref: x,
                    "aria-label": (Xe = M(u).ariaLabels) == null ? void 0 : Xe.openYearsOverlay,
                    tabindex: "0",
                    onClick: o[11] || (o[11] = () => g(!1)),
                    onKeydown: o[12] || (o[12] = de(() => g(!1), ["enter"]))
                  }, [
                    v.$slots.year ? K(v.$slots, "year", {
                      key: 0,
                      year: e.year
                    }) : A("", !0),
                    v.$slots.year ? A("", !0) : (p(), I(ye, { key: 1 }, [
                      Ze(Oe(e.year), 1)
                    ], 64))
                  ], 40, Wl),
                  oe("div", {
                    class: "dp__month_year_col_nav",
                    tabindex: "0",
                    ref_key: "mpNextIconRef",
                    ref: z,
                    onClick: o[13] || (o[13] = (Se) => S(!0)),
                    onKeydown: o[14] || (o[14] = de((Se) => S(!0), ["enter"]))
                  }, [
                    oe("div", {
                      class: he(["dp__inner_nav", { dp__inner_nav_disabled: M(P)(!0) }]),
                      role: "button",
                      "aria-label": (Ee = M(u).ariaLabels) == null ? void 0 : Ee.nextMonth
                    }, [
                      v.$slots["arrow-right"] ? K(v.$slots, "arrow-right", { key: 0 }) : A("", !0),
                      v.$slots["arrow-right"] ? A("", !0) : (p(), me(M(Cn), { key: 1 }))
                    ], 10, Hl)
                  ], 544)
                ]),
                gt(wt, {
                  name: M(c)(d.value),
                  css: M(y)
                }, {
                  default: ie(() => [
                    d.value ? (p(), me(Pt, Pe({ key: 0 }, le.value("year"), {
                      modelValue: O.value,
                      "onUpdate:modelValue": o[15] || (o[15] = (Se) => O.value = Se),
                      onToggle: g,
                      onSelected: o[16] || (o[16] = (Se) => v.$emit("overlay-closed"))
                    }), Le({
                      "button-icon": ie(() => [
                        v.$slots["calendar-icon"] ? K(v.$slots, "calendar-icon", { key: 0 }) : A("", !0),
                        v.$slots["calendar-icon"] ? A("", !0) : (p(), me(M(xt), { key: 1 }))
                      ]),
                      _: 2
                    }, [
                      v.$slots["year-overlay-value"] ? {
                        name: "item",
                        fn: ie(({ item: Se }) => [
                          K(v.$slots, "year-overlay-value", {
                            text: Se.text,
                            value: Se.value
                          })
                        ]),
                        key: "0"
                      } : void 0
                    ]), 1040, ["modelValue"])) : A("", !0)
                  ]),
                  _: 3
                }, 8, ["name", "css"])
              ];
            }),
            _: 2
          }, [
            v.$slots["month-overlay-value"] ? {
              name: "item",
              fn: ie(({ item: ne }) => [
                K(v.$slots, "month-overlay-value", {
                  text: ne.text,
                  value: ne.value
                })
              ]),
              key: "0"
            } : void 0
          ]), 1040, ["skip-active", "year", "multi-model-value", "modelValue"])) : A("", !0),
          v.yearPicker ? (p(), me(Pt, Pe({ key: 2 }, le.value("year"), {
            modelValue: O.value,
            "onUpdate:modelValue": o[19] || (o[19] = (ne) => O.value = ne),
            "multi-model-value": b.value,
            "skip-active": v.range,
            "skip-button-ref": "",
            "year-picker": "",
            onToggle: g,
            onSelected: o[20] || (o[20] = (ne) => v.$emit("overlay-closed"))
          }), Le({ _: 2 }, [
            v.$slots["year-overlay-value"] ? {
              name: "item",
              fn: ie(({ item: ne }) => [
                K(v.$slots, "year-overlay-value", {
                  text: ne.text,
                  value: ne.value
                })
              ]),
              key: "0"
            } : void 0
          ]), 1040, ["modelValue", "multi-model-value", "skip-active"])) : A("", !0)
        ], 64))
      ]);
    };
  }
}), zl = {
  key: 0,
  class: "dp__time_input"
}, jl = ["aria-label", "onKeydown", "onClick"], Kl = ["aria-label", "onKeydown", "onClick"], Gl = ["aria-label", "onKeydown", "onClick"], Zl = { key: 0 }, ql = ["aria-label", "onKeydown"], Xl = /* @__PURE__ */ je({
  __name: "TimeInput",
  props: {
    hours: { type: Number, default: 0 },
    minutes: { type: Number, default: 0 },
    seconds: { type: Number, default: 0 },
    closeTimePickerBtn: { type: Object, default: null },
    order: { type: Number, default: 0 },
    ...dt
  },
  emits: [
    "set-hours",
    "set-minutes",
    "update:hours",
    "update:minutes",
    "update:seconds",
    "reset-flow",
    "mounted",
    "overlay-closed",
    "am-pm-change"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { setTimePickerElements: u, setTimePickerBackRef: c } = it(), { defaults: y } = Fe(t), { transitionName: N, showTransition: V } = zt(y.value.transitions), P = Rt({
      hours: !1,
      minutes: !1,
      seconds: !1
    }), F = H("AM"), C = H(null), d = H([]);
    We(() => {
      a("mounted");
    });
    const k = (r) => Ne(/* @__PURE__ */ new Date(), {
      hours: r.hours,
      minutes: r.minutes,
      seconds: t.enableSeconds ? r.seconds : 0,
      milliseconds: 0
    }), J = L(() => ({ hours: t.hours, minutes: t.minutes, seconds: t.seconds })), x = L(() => (r) => !ue(+t[r] + +t[`${r}Increment`], r)), z = L(() => (r) => !ue(+t[r] - +t[`${r}Increment`], r)), Y = (r, l) => Gn(Ne(T(), r), l), U = (r, l) => ka(Ne(T(), r), l), O = L(
      () => ({
        dp__time_col: !0,
        dp__time_col_reg: !t.enableSeconds && t.is24,
        dp__time_col_reg_with_button: !t.enableSeconds && !t.is24,
        dp__time_col_sec: t.enableSeconds && t.is24,
        dp__time_col_sec_with_button: t.enableSeconds && !t.is24
      })
    ), G = L(() => {
      const r = [{ type: "hours" }, { type: "", separator: !0 }, { type: "minutes" }];
      return t.enableSeconds ? r.concat([{ type: "", separator: !0 }, { type: "seconds" }]) : r;
    }), j = L(() => G.value.filter((r) => !r.separator)), le = L(() => (r) => {
      if (r === "hours") {
        const l = R(+t.hours);
        return { text: l < 10 ? `0${l}` : `${l}`, value: l };
      }
      return { text: t[r] < 10 ? `0${t[r]}` : `${t[r]}`, value: t[r] };
    }), se = (r) => {
      const l = t.is24 ? 24 : 12, g = r === "hours" ? l : 60, D = +t[`${r}GridIncrement`], S = r === "hours" && !t.is24 ? D : 0, Q = [];
      for (let v = S; v < g; v += D)
        Q.push({ value: v, text: v < 10 ? `0${v}` : `${v}` });
      return r === "hours" && !t.is24 && Q.push({ value: 0, text: "12" }), qa(Q);
    }, ue = (r, l) => {
      const g = t.minTime ? k(Jt(t.minTime)) : null, D = t.maxTime ? k(Jt(t.maxTime)) : null, S = k(Jt(J.value, l, r));
      return g && D ? (Nt(S, D) || ft(S, D)) && (_t(S, g) || ft(S, g)) : g ? _t(S, g) || ft(S, g) : D ? Nt(S, D) || ft(S, D) : !0;
    }, ce = L(() => (r) => se(r).flat().filter((g) => g || (g == null ? void 0 : g.value) === 0).map((g) => g.value).filter((g) => !ue(g, r))), fe = (r) => t[`no${r[0].toUpperCase() + r.slice(1)}Overlay`], _ = (r) => {
      fe(r) || (P[r] = !P[r], P[r] || a("overlay-closed"));
    }, b = (r) => r === "hours" ? et : r === "minutes" ? tt : kt, f = (r, l = !0) => {
      const g = l ? Y : U, D = l ? +t[`${r}Increment`] : -+t[`${r}Increment`];
      ue(+t[r] + D, r) && a(
        `update:${r}`,
        b(r)(g({ [r]: +t[r] }, { [r]: +t[`${r}Increment`] }))
      );
    }, R = (r) => t.is24 ? r : (r >= 12 ? F.value = "PM" : F.value = "AM", el(r)), B = () => {
      F.value === "PM" ? (F.value = "AM", a("update:hours", t.hours - 12)) : (F.value = "PM", a("update:hours", t.hours + 12)), a("am-pm-change", F.value);
    }, $ = (r) => {
      P[r] = !0;
    }, m = (r, l, g) => {
      if (r && t.arrowNavigation) {
        Array.isArray(d.value[l]) ? d.value[l][g] = r : d.value[l] = [r];
        const D = d.value.reduce(
          (S, Q) => Q.map((v, o) => [...S[o] || [], Q[o]]),
          []
        );
        c(t.closeTimePickerBtn), C.value && (D[1] = D[1].concat(C.value)), u(D, t.order);
      }
    }, i = (r, l) => r === "hours" && !t.is24 ? a(`update:${r}`, F.value === "PM" ? l + 12 : l) : a(`update:${r}`, l);
    return n({ openChildCmp: $ }), (r, l) => {
      var g;
      return r.disabled ? A("", !0) : (p(), I("div", zl, [
        (p(!0), I(ye, null, Ce(G.value, (D, S) => {
          var Q, v, o;
          return p(), I("div", {
            key: S,
            class: he(O.value)
          }, [
            D.separator ? (p(), I(ye, { key: 0 }, [
              Ze(" : ")
            ], 64)) : (p(), I(ye, { key: 1 }, [
              oe("button", {
                type: "button",
                class: he({
                  dp__btn: !0,
                  dp__inc_dec_button: !0,
                  dp__inc_dec_button_disabled: x.value(D.type)
                }),
                "aria-label": (Q = M(y).ariaLabels) == null ? void 0 : Q.incrementValue(D.type),
                tabindex: "0",
                onKeydown: [
                  de((E) => f(D.type), ["enter"]),
                  de((E) => f(D.type), ["space"])
                ],
                onClick: (E) => f(D.type),
                ref_for: !0,
                ref: (E) => m(E, S, 0)
              }, [
                r.$slots["arrow-up"] ? K(r.$slots, "arrow-up", { key: 0 }) : A("", !0),
                r.$slots["arrow-up"] ? A("", !0) : (p(), me(M(qn), { key: 1 }))
              ], 42, jl),
              oe("button", {
                type: "button",
                "aria-label": (v = M(y).ariaLabels) == null ? void 0 : v.openTpOverlay(D.type),
                class: he(["dp__btn", fe(D.type) ? "" : "dp__time_display"]),
                tabindex: "0",
                onKeydown: [
                  de((E) => _(D.type), ["enter"]),
                  de((E) => _(D.type), ["space"])
                ],
                onClick: (E) => _(D.type),
                ref_for: !0,
                ref: (E) => m(E, S, 1)
              }, [
                r.$slots[D.type] ? K(r.$slots, D.type, {
                  key: 0,
                  text: le.value(D.type).text,
                  value: le.value(D.type).value
                }) : A("", !0),
                r.$slots[D.type] ? A("", !0) : (p(), I(ye, { key: 1 }, [
                  Ze(Oe(le.value(D.type).text), 1)
                ], 64))
              ], 42, Kl),
              oe("button", {
                type: "button",
                class: he({
                  dp__btn: !0,
                  dp__inc_dec_button: !0,
                  dp__inc_dec_button_disabled: z.value(D.type)
                }),
                "aria-label": (o = M(y).ariaLabels) == null ? void 0 : o.decrementValue(D.type),
                tabindex: "0",
                onKeydown: [
                  de((E) => f(D.type, !1), ["enter"]),
                  de((E) => f(D.type, !1), ["space"])
                ],
                onClick: (E) => f(D.type, !1),
                ref_for: !0,
                ref: (E) => m(E, S, 2)
              }, [
                r.$slots["arrow-down"] ? K(r.$slots, "arrow-down", { key: 0 }) : A("", !0),
                r.$slots["arrow-down"] ? A("", !0) : (p(), me(M(Xn), { key: 1 }))
              ], 42, Gl)
            ], 64))
          ], 2);
        }), 128)),
        r.is24 ? A("", !0) : (p(), I("div", Zl, [
          r.$slots["am-pm-button"] ? K(r.$slots, "am-pm-button", {
            key: 0,
            toggle: B,
            value: F.value
          }) : A("", !0),
          r.$slots["am-pm-button"] ? A("", !0) : (p(), I("button", {
            key: 1,
            ref_key: "amPmButton",
            ref: C,
            type: "button",
            class: "dp__pm_am_button",
            role: "button",
            "aria-label": (g = M(y).ariaLabels) == null ? void 0 : g.amPmButton,
            tabindex: "0",
            onClick: B,
            onKeydown: [
              de(nt(B, ["prevent"]), ["enter"]),
              de(nt(B, ["prevent"]), ["space"])
            ]
          }, Oe(F.value), 41, ql))
        ])),
        (p(!0), I(ye, null, Ce(j.value, (D, S) => (p(), me(wt, {
          key: S,
          name: M(N)(P[D.type]),
          css: M(V)
        }, {
          default: ie(() => [
            P[D.type] ? (p(), me(Pt, {
              key: 0,
              items: se(D.type),
              "disabled-values": M(y).filters.times[D.type].concat(ce.value(D.type)),
              "esc-close": r.escClose,
              "aria-labels": M(y).ariaLabels,
              "hide-navigation": r.hideNavigation,
              "onUpdate:modelValue": (Q) => i(D.type, Q),
              onSelected: (Q) => _(D.type),
              onToggle: (Q) => _(D.type),
              onResetFlow: l[0] || (l[0] = (Q) => r.$emit("reset-flow")),
              type: D.type
            }, Le({
              "button-icon": ie(() => [
                r.$slots["clock-icon"] ? K(r.$slots, "clock-icon", { key: 0 }) : A("", !0),
                r.$slots["clock-icon"] ? A("", !0) : (p(), me(M(Zn), { key: 1 }))
              ]),
              _: 2
            }, [
              r.$slots[`${D.type}-overlay-value`] ? {
                name: "item",
                fn: ie(({ item: Q }) => [
                  K(r.$slots, `${D.type}-overlay-value`, {
                    text: Q.text,
                    value: Q.value
                  })
                ]),
                key: "0"
              } : void 0
            ]), 1032, ["items", "disabled-values", "esc-close", "aria-labels", "hide-navigation", "onUpdate:modelValue", "onSelected", "onToggle", "type"])) : A("", !0)
          ]),
          _: 2
        }, 1032, ["name", "css"]))), 128))
      ]));
    };
  }
}), Jl = ["aria-label"], Ql = { class: "dp__overlay_container dp__container_flex dp__time_picker_overlay_container" }, er = {
  key: 1,
  class: "dp__overlay_row dp__flex_row"
}, tr = ["aria-label"], nr = /* @__PURE__ */ je({
  __name: "TimePicker",
  props: {
    hours: { type: [Number, Array], default: 0 },
    minutes: { type: [Number, Array], default: 0 },
    seconds: { type: [Number, Array], default: 0 },
    internalModelValue: { type: [Date, Array], default: null },
    ...dt
  },
  emits: [
    "update:hours",
    "update:minutes",
    "update:seconds",
    "mount",
    "reset-flow",
    "overlay-opened",
    "overlay-closed",
    "am-pm-change"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { buildMatrix: u, setTimePicker: c } = it(), y = pn(), { hideNavigationButtons: N, defaults: V } = Fe(t), { transitionName: P, showTransition: F } = zt(V.value.transitions), C = H(null), d = H(null), k = H([]), J = H(null);
    We(() => {
      a("mount"), !t.timePicker && t.arrowNavigation ? u([Me(C.value)], "time") : c(!0, t.timePicker);
    });
    const x = L(() => t.range && t.modelAuto ? aa(t.internalModelValue) : !0), z = H(!1), Y = (_) => ({
      hours: Array.isArray(t.hours) ? t.hours[_] : t.hours,
      minutes: Array.isArray(t.minutes) ? t.minutes[_] : t.minutes,
      seconds: Array.isArray(t.seconds) ? t.seconds[_] : t.seconds
    }), U = L(() => {
      const _ = [];
      if (t.range)
        for (let b = 0; b < 2; b++)
          _.push(Y(b));
      else
        _.push(Y(0));
      return _;
    }), O = (_, b = !1, f = "") => {
      b || a("reset-flow"), z.value = _, a(_ ? "overlay-opened" : "overlay-closed"), t.arrowNavigation && c(_), at(() => {
        f !== "" && k.value[0] && k.value[0].openChildCmp(f);
      });
    }, G = L(() => ({
      dp__btn: !0,
      dp__button: !0,
      dp__button_bottom: t.autoApply && !t.keepActionRow
    })), j = yt(y, "timePicker"), le = (_, b, f) => t.range ? b === 0 ? [_, U.value[1][f]] : [U.value[0][f], _] : _, se = (_) => {
      a("update:hours", _);
    }, ue = (_) => {
      a("update:minutes", _);
    }, ce = (_) => {
      a("update:seconds", _);
    }, fe = () => {
      J.value && t.arrowNavigation && J.value.focus({ preventScroll: !0 });
    };
    return n({ toggleTimePicker: O }), (_, b) => {
      var f;
      return p(), I("div", null, [
        _.timePicker ? A("", !0) : Et((p(), I("button", {
          key: 0,
          type: "button",
          class: he(G.value),
          "aria-label": (f = M(V).ariaLabels) == null ? void 0 : f.openTimePicker,
          tabindex: "0",
          ref_key: "openTimePickerBtn",
          ref: C,
          onKeydown: [
            b[0] || (b[0] = de((R) => O(!0), ["enter"])),
            b[1] || (b[1] = de((R) => O(!0), ["space"]))
          ],
          onClick: b[2] || (b[2] = (R) => O(!0))
        }, [
          _.$slots["clock-icon"] ? K(_.$slots, "clock-icon", { key: 0 }) : A("", !0),
          _.$slots["clock-icon"] ? A("", !0) : (p(), me(M(Zn), { key: 1 }))
        ], 42, Jl)), [
          [Lt, !M(N)("time")]
        ]),
        gt(wt, {
          name: M(P)(z.value),
          css: M(F)
        }, {
          default: ie(() => {
            var R;
            return [
              z.value || _.timePicker ? (p(), I("div", {
                key: 0,
                class: "dp__overlay",
                ref_key: "overlayRef",
                ref: J,
                tabindex: "0"
              }, [
                oe("div", Ql, [
                  _.$slots["time-picker-overlay"] ? K(_.$slots, "time-picker-overlay", {
                    key: 0,
                    hours: e.hours,
                    minutes: e.minutes,
                    seconds: e.seconds,
                    setHours: se,
                    setMinutes: ue,
                    setSeconds: ce
                  }) : A("", !0),
                  _.$slots["time-picker-overlay"] ? A("", !0) : (p(), I("div", er, [
                    (p(!0), I(ye, null, Ce(U.value, (B, $) => Et((p(), me(Xl, Pe({ key: $ }, {
                      ..._.$props,
                      order: $,
                      hours: B.hours,
                      minutes: B.minutes,
                      seconds: B.seconds,
                      closeTimePickerBtn: d.value,
                      disabled: $ === 0 ? _.fixedStart : _.fixedEnd
                    }, {
                      ref_for: !0,
                      ref_key: "timeInputRefs",
                      ref: k,
                      "onUpdate:hours": (m) => se(le(m, $, "hours")),
                      "onUpdate:minutes": (m) => ue(le(m, $, "minutes")),
                      "onUpdate:seconds": (m) => ce(le(m, $, "seconds")),
                      onMounted: fe,
                      onOverlayClosed: fe,
                      onAmPmChange: b[3] || (b[3] = (m) => _.$emit("am-pm-change", m))
                    }), Le({ _: 2 }, [
                      Ce(M(j), (m, i) => ({
                        name: m,
                        fn: ie((r) => [
                          K(_.$slots, m, Re(xe(r)))
                        ])
                      }))
                    ]), 1040, ["onUpdate:hours", "onUpdate:minutes", "onUpdate:seconds"])), [
                      [Lt, $ === 0 ? !0 : x.value]
                    ])), 128))
                  ])),
                  _.timePicker ? A("", !0) : Et((p(), I("button", {
                    key: 2,
                    type: "button",
                    ref_key: "closeTimePickerBtn",
                    ref: d,
                    class: he(G.value),
                    "aria-label": (R = M(V).ariaLabels) == null ? void 0 : R.closeTimePicker,
                    tabindex: "0",
                    onKeydown: [
                      b[4] || (b[4] = de((B) => O(!1), ["enter"])),
                      b[5] || (b[5] = de((B) => O(!1), ["space"]))
                    ],
                    onClick: b[6] || (b[6] = (B) => O(!1))
                  }, [
                    _.$slots["calendar-icon"] ? K(_.$slots, "calendar-icon", { key: 0 }) : A("", !0),
                    _.$slots["calendar-icon"] ? A("", !0) : (p(), me(M(xt), { key: 1 }))
                  ], 42, tr)), [
                    [Lt, !M(N)("time")]
                  ])
                ])
              ], 512)) : A("", !0)
            ];
          }),
          _: 3
        }, 8, ["name", "css"])
      ]);
    };
  }
}), ar = (e, n) => {
  const { isDisabled: a, matchDate: t, getWeekFromDate: u, defaults: c } = Fe(n), y = H(null), N = H(T()), V = (l) => {
    !l.current && n.hideOffsetDates || (y.value = l.value);
  }, P = () => {
    y.value = null;
  }, F = (l) => Array.isArray(e.value) && n.range && e.value[0] && y.value ? l ? Ve(y.value, e.value[0]) : Ie(y.value, e.value[0]) : !0, C = (l, g) => {
    const D = () => e.value ? g ? e.value[0] || null : e.value[1] : null, S = e.value && Array.isArray(e.value) ? D() : null;
    return ge(T(l.value), S);
  }, d = (l) => {
    const g = Array.isArray(e.value) ? e.value[0] : null;
    return l ? !Ie(y.value || null, g) : !0;
  }, k = (l, g = !0) => (n.range || n.weekPicker) && Array.isArray(e.value) && e.value.length === 2 ? n.hideOffsetDates && !l.current ? !1 : ge(T(l.value), e.value[g ? 0 : 1]) : n.range ? C(l, g) && d(g) || ge(l.value, Array.isArray(e.value) ? e.value[0] : null) && F(g) : !1, J = (l, g, D) => Array.isArray(e.value) && e.value[0] && e.value.length === 1 ? l ? !1 : D ? Ve(e.value[0], g.value) : Ie(e.value[0], g.value) : !1, x = (l) => !e.value || n.hideOffsetDates && !l.current ? !1 : n.range ? n.modelAuto && Array.isArray(e.value) ? ge(l.value, e.value[0] ? e.value[0] : N.value) : !1 : n.multiDates && Array.isArray(e.value) ? e.value.some((g) => ge(g, l.value)) : ge(l.value, e.value ? e.value : N.value), z = (l) => {
    if (n.autoRange || n.weekPicker) {
      if (y.value) {
        if (n.hideOffsetDates && !l.current)
          return !1;
        const g = vt(y.value, +n.autoRange), D = u(T(y.value));
        return n.weekPicker ? ge(D[1], T(l.value)) : ge(g, T(l.value));
      }
      return !1;
    }
    return !1;
  }, Y = (l) => {
    if (n.autoRange || n.weekPicker) {
      if (y.value) {
        const g = vt(y.value, +n.autoRange);
        if (n.hideOffsetDates && !l.current)
          return !1;
        const D = u(T(y.value));
        return n.weekPicker ? Ve(l.value, D[0]) && Ie(l.value, D[1]) : Ve(l.value, y.value) && Ie(l.value, g);
      }
      return !1;
    }
    return !1;
  }, U = (l) => {
    if (n.autoRange || n.weekPicker) {
      if (y.value) {
        if (n.hideOffsetDates && !l.current)
          return !1;
        const g = u(T(y.value));
        return n.weekPicker ? ge(g[0], l.value) : ge(y.value, l.value);
      }
      return !1;
    }
    return !1;
  }, O = (l) => Jn(e.value, y.value, l.value), G = () => n.modelAuto && Array.isArray(n.internalModelValue) ? !!n.internalModelValue[0] : !1, j = () => n.modelAuto ? aa(n.internalModelValue) : !0, le = (l) => {
    if (Array.isArray(e.value) && e.value.length || n.weekPicker)
      return !1;
    const g = n.range ? !k(l) && !k(l, !1) : !0;
    return !a(l.value) && !x(l) && !(!l.current && n.hideOffsetDates) && g;
  }, se = (l) => n.range ? n.modelAuto ? G() && x(l) : !1 : x(l), ue = (l) => n.highlight ? t(l.value, n.highlight) : !1, ce = (l) => a(l.value) && n.highlightDisabledDays === !1, fe = (l) => n.highlightWeekDays && n.highlightWeekDays.includes(l.value.getDay()), _ = (l) => (n.range || n.weekPicker) && (!(c.value.multiCalendars > 0) || l.current) && j() && !(!l.current && n.hideOffsetDates) && !x(l) ? O(l) : !1, b = (l) => {
    const { isRangeStart: g, isRangeEnd: D } = B(l), S = n.range ? g || D : !1;
    return {
      dp__cell_offset: !l.current,
      dp__pointer: !n.disabled && !(!l.current && n.hideOffsetDates) && !a(l.value),
      dp__cell_disabled: a(l.value),
      dp__cell_highlight: !ce(l) && (ue(l) || fe(l)) && !se(l) && !S,
      dp__cell_highlight_active: !ce(l) && (ue(l) || fe(l)) && se(l),
      dp__today: !n.noToday && ge(l.value, N.value) && l.current
    };
  }, f = (l) => ({
    dp__active_date: se(l),
    dp__date_hover: le(l)
  }), R = (l) => ({
    ...$(l),
    ...m(l),
    dp__range_between_week: _(l) && n.weekPicker
  }), B = (l) => {
    const g = c.value.multiCalendars > 0 ? l.current && k(l) && j() : k(l) && j(), D = c.value.multiCalendars > 0 ? l.current && k(l, !1) && j() : k(l, !1) && j();
    return { isRangeStart: g, isRangeEnd: D };
  }, $ = (l) => {
    const { isRangeStart: g, isRangeEnd: D } = B(l);
    return {
      dp__range_start: g,
      dp__range_end: D,
      dp__range_between: _(l) && !n.weekPicker,
      dp__date_hover_start: J(le(l), l, !0),
      dp__date_hover_end: J(le(l), l, !1)
    };
  }, m = (l) => ({
    ...$(l),
    dp__cell_auto_range: Y(l),
    dp__cell_auto_range_start: U(l),
    dp__cell_auto_range_end: z(l)
  }), i = (l) => n.range ? n.autoRange ? m(l) : n.modelAuto ? { ...f(l), ...$(l) } : $(l) : n.weekPicker ? R(l) : f(l);
  return {
    setHoverDate: V,
    clearHoverDate: P,
    getDayClassData: (l) => ({
      ...b(l),
      ...i(l),
      [n.dayClass ? n.dayClass(l.value) : ""]: !0,
      [n.calendarCellClassName]: !!n.calendarCellClassName
    })
  };
}, lr = ["id", "onKeydown"], rr = {
  key: 0,
  class: "dp__sidebar_left"
}, or = {
  key: 1,
  class: "dp__preset_ranges"
}, sr = ["onClick"], ur = {
  key: 2,
  class: "dp__sidebar_right"
}, ir = {
  key: 3,
  class: "dp__action_extra"
}, dr = /* @__PURE__ */ je({
  __name: "DatepickerMenu",
  props: {
    openOnTop: { type: Boolean, default: !1 },
    internalModelValue: { type: [Date, Array], default: null },
    ...dt
  },
  emits: [
    "close-picker",
    "select-date",
    "auto-apply",
    "time-update",
    "flow-step",
    "update-month-year",
    "invalid-select",
    "update:internal-model-value",
    "recalculate-position",
    "invalid-fixed-range",
    "tooltip-open",
    "tooltip-close",
    "time-picker-open",
    "time-picker-close",
    "am-pm-change",
    "range-start",
    "range-end"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, u = L(() => {
      const { openOnTop: h, internalModelValue: W, ...De } = t;
      return De;
    }), { setMenuFocused: c, setShiftKey: y, control: N } = Qn(), { getCalendarDays: V, defaults: P } = Fe(t), F = pn(), C = H(null), d = Rt({
      timePicker: !!(!t.enableTimePicker || t.timePicker || t.monthPicker),
      monthYearInput: !!t.timePicker,
      calendar: !1
    }), k = H([]), J = H([]), x = H(null), z = H(null), Y = H(0), U = H(!1), O = H(0);
    We(() => {
      var W;
      U.value = !0, !((W = t.presetRanges) != null && W.length) && !F["left-sidebar"] && !F["right-sidebar"] && (re(), window.addEventListener("resize", re));
      const h = Me(z);
      if (h && !t.textInput && !t.inline && (c(!0), ce()), h) {
        const De = (Te) => {
          t.allowPreventDefault && Te.preventDefault(), Te.stopImmediatePropagation(), Te.stopPropagation();
        };
        h.addEventListener("pointerdown", De), h.addEventListener("mousedown", De);
      }
    }), hn(() => {
      window.removeEventListener("resize", re);
    });
    const { arrowRight: G, arrowLeft: j, arrowDown: le, arrowUp: se } = it(), ue = (h) => {
      h || h === 0 ? J.value[h].triggerTransition(
        R.value(h),
        B.value(h)
      ) : J.value.forEach(
        (W, De) => W.triggerTransition(R.value(De), B.value(De))
      );
    }, ce = () => {
      const h = Me(z);
      h && h.focus({ preventScroll: !0 });
    }, fe = () => {
      var h;
      (h = t.flow) != null && h.length && O.value !== -1 && (O.value += 1, a("flow-step", O.value), w());
    }, _ = () => {
      O.value = -1;
    }, {
      calendars: b,
      modelValue: f,
      month: R,
      year: B,
      time: $,
      updateTime: m,
      updateMonthYear: i,
      selectDate: r,
      getWeekNum: l,
      monthYearSelect: g,
      handleScroll: D,
      handleArrow: S,
      handleSwipe: Q,
      getMarker: v,
      selectCurrentDate: o,
      presetDateRange: E
    } = il(t, a, fe, ue, O), { setHoverDate: ee, clearHoverDate: ke, getDayClassData: He } = ar(f, t), ne = {
      modelValue: f,
      month: R,
      year: B,
      time: $,
      updateTime: m,
      updateMonthYear: i,
      selectDate: r,
      presetDateRange: E,
      handleMonthYearChange: (h) => {
        k.value[0] && k.value[0].handleMonthYearChange(h);
      }
    };
    ut(
      b,
      () => {
        t.openOnTop && setTimeout(() => {
          a("recalculate-position");
        }, 0);
      },
      { deep: !0 }
    );
    const Xe = yt(F, "calendar"), Ee = yt(F, "action"), Se = yt(F, "timePicker"), Je = yt(F, "monthYear"), bt = L(() => t.openOnTop ? "dp__arrow_bottom" : "dp__arrow_top"), Dt = L(() => Ja(t.yearRange, t.reverseYears)), X = L(() => Qa(t.locale, t.monthNameFormat)), re = () => {
      const h = Me(C);
      h && (Y.value = h.getBoundingClientRect().width);
    }, te = L(() => (h) => V(R.value(h), B.value(h))), ht = L(
      () => P.value.multiCalendars > 0 ? [...Array(P.value.multiCalendars).keys()] : [0]
    ), lt = L(
      () => (h) => h === 1
    ), jt = L(() => t.monthPicker || t.timePicker || t.yearPicker), Kt = L(
      () => ({
        dp__menu_inner: !0,
        dp__flex_display: P.value.multiCalendars > 0
      })
    ), Ot = L(() => ({
      dp__instance_calendar: P.value.multiCalendars > 0
    })), $t = L(() => ({
      dp__menu_disabled: t.disabled,
      dp__menu_readonly: t.readonly
    })), Gt = L(
      () => (h) => qt(te, h)
    ), Zt = L(
      () => ({
        dp__menu: !0,
        dp__menu_index: !t.inline,
        dp__relative: t.inline,
        [t.menuClassName]: !!t.menuClassName
      })
    ), qt = (h, W) => h.value(W).map((De) => ({
      ...De,
      days: De.days.map((Te) => (Te.marker = v(Te), Te.classData = He(Te), Te))
    })), It = (h) => {
      h.stopPropagation(), h.stopImmediatePropagation();
    }, $n = () => {
      t.escClose && a("close-picker");
    }, Mn = (h, W = !1) => {
      r(h, W), t.spaceConfirm && a("select-date");
    }, Bt = (h) => {
      var W;
      (W = t.flow) != null && W.length && (d[h] = !0, Object.keys(d).filter((De) => !d[De]).length || w());
    }, s = (h, W, De, Te, ...Ge) => {
      if (t.flow[O.value] === h) {
        const q = Te ? W.value[0] : W.value;
        q && q[De](...Ge);
      }
    }, w = () => {
      s("month", k, "toggleMonthPicker", !0, !0), s("year", k, "toggleYearPicker", !0, !0), s("calendar", x, "toggleTimePicker", !1, !1, !0), s("time", x, "toggleTimePicker", !1, !0, !0);
      const h = t.flow[O.value];
      (h === "hours" || h === "minutes" || h === "seconds") && s(h, x, "toggleTimePicker", !1, !0, !0, h);
    }, Z = (h) => {
      if (t.arrowNavigation) {
        if (h === "up")
          return se();
        if (h === "down")
          return le();
        if (h === "left")
          return j();
        if (h === "right")
          return G();
      } else
        h === "left" || h === "up" ? S("left", 0, h === "up") : S("right", 0, h === "down");
    }, ae = (h) => {
      y(h.shiftKey), !t.disableMonthYearSelect && h.code === "Tab" && h.target.classList.contains("dp__menu") && N.value.shiftKeyInMenu && (h.preventDefault(), h.stopImmediatePropagation(), a("close-picker"));
    }, $e = () => {
      ce(), a("time-picker-close");
    }, Ke = (h) => {
      var W, De, Te, Ge, q;
      (W = x.value) == null || W.toggleTimePicker(!1, !1), (Te = (De = k.value) == null ? void 0 : De[h]) == null || Te.toggleMonthPicker(!1, !1), (q = (Ge = k.value) == null ? void 0 : Ge[h]) == null || q.toggleYearPicker(!1, !1);
    };
    return n({
      updateMonthYear: i,
      switchView: (h, W = 0) => {
        var De, Te, Ge, q, Qe;
        return h === "month" ? (Te = (De = k.value) == null ? void 0 : De[W]) == null ? void 0 : Te.toggleMonthPicker(!1, !0) : h === "year" ? (q = (Ge = k.value) == null ? void 0 : Ge[W]) == null ? void 0 : q.toggleYearPicker(!1, !0) : h === "time" ? (Qe = x.value) == null ? void 0 : Qe.toggleTimePicker(!0, !1) : Ke(W);
      }
    }), (h, W) => {
      var De;
      return p(), me(wt, {
        appear: "",
        name: (De = M(P).transitions) == null ? void 0 : De.menuAppear,
        css: !!h.transitions
      }, {
        default: ie(() => {
          var Te, Ge;
          return [
            oe("div", {
              id: h.uid ? `dp-menu-${h.uid}` : void 0,
              tabindex: "0",
              ref_key: "dpMenuRef",
              ref: z,
              role: "dialog",
              class: he(Zt.value),
              onMouseleave: W[14] || (W[14] = //@ts-ignore
              (...q) => M(ke) && M(ke)(...q)),
              onClick: It,
              onKeydown: [
                de($n, ["esc"]),
                W[15] || (W[15] = de(nt((q) => Z("left"), ["prevent"]), ["left"])),
                W[16] || (W[16] = de(nt((q) => Z("up"), ["prevent"]), ["up"])),
                W[17] || (W[17] = de(nt((q) => Z("down"), ["prevent"]), ["down"])),
                W[18] || (W[18] = de(nt((q) => Z("right"), ["prevent"]), ["right"])),
                ae
              ]
            }, [
              (h.disabled || h.readonly) && h.inline ? (p(), I("div", {
                key: 0,
                class: he($t.value)
              }, null, 2)) : A("", !0),
              !h.inline && !h.teleportCenter ? (p(), I("div", {
                key: 1,
                class: he(bt.value)
              }, null, 2)) : A("", !0),
              oe("div", {
                class: he({
                  dp__menu_content_wrapper: ((Te = h.presetRanges) == null ? void 0 : Te.length) || !!h.$slots["left-sidebar"] || !!h.$slots["right-sidebar"]
                })
              }, [
                h.$slots["left-sidebar"] ? (p(), I("div", rr, [
                  K(h.$slots, "left-sidebar", Re(xe(ne)))
                ])) : A("", !0),
                (Ge = h.presetRanges) != null && Ge.length ? (p(), I("div", or, [
                  (p(!0), I(ye, null, Ce(h.presetRanges, (q, Qe) => (p(), I("div", {
                    key: Qe,
                    style: ot(q.style || {}),
                    class: "dp__preset_range",
                    onClick: (ve) => M(E)(q.range, !!q.slot)
                  }, [
                    q.slot ? K(h.$slots, q.slot, {
                      key: 0,
                      presetDateRange: M(E),
                      label: q.label,
                      range: q.range
                    }) : (p(), I(ye, { key: 1 }, [
                      Ze(Oe(q.label), 1)
                    ], 64))
                  ], 12, sr))), 128))
                ])) : A("", !0),
                oe("div", {
                  class: "dp__instance_calendar",
                  ref_key: "calendarWrapperRef",
                  ref: C,
                  role: "document"
                }, [
                  oe("div", {
                    class: he(Kt.value)
                  }, [
                    (p(!0), I(ye, null, Ce(ht.value, (q, Qe) => (p(), I("div", {
                      key: q,
                      class: he(Ot.value)
                    }, [
                      !h.disableMonthYearSelect && !h.timePicker ? (p(), me(xl, Pe({
                        key: 0,
                        ref_for: !0,
                        ref: (ve) => {
                          ve && (k.value[Qe] = ve);
                        },
                        months: X.value,
                        years: Dt.value,
                        month: M(R)(q),
                        year: M(B)(q),
                        instance: q,
                        "internal-model-value": e.internalModelValue
                      }, u.value, {
                        onMount: W[0] || (W[0] = (ve) => Bt("monthYearInput")),
                        onResetFlow: _,
                        onUpdateMonthYear: (ve) => M(i)(q, ve),
                        onMonthYearSelect: M(g),
                        onOverlayClosed: ce
                      }), Le({ _: 2 }, [
                        Ce(M(Je), (ve, ra) => ({
                          name: ve,
                          fn: ie((Xt) => [
                            K(h.$slots, ve, Re(xe(Xt)))
                          ])
                        }))
                      ]), 1040, ["months", "years", "month", "year", "instance", "internal-model-value", "onUpdateMonthYear", "onMonthYearSelect"])) : A("", !0),
                      gt(Rl, Pe({
                        ref_for: !0,
                        ref: (ve) => {
                          ve && (J.value[Qe] = ve);
                        },
                        "specific-mode": jt.value,
                        "get-week-num": M(l),
                        instance: q,
                        "mapped-dates": Gt.value(q),
                        month: M(R)(q),
                        year: M(B)(q)
                      }, u.value, {
                        onSelectDate: (ve) => M(r)(ve, !lt.value(q)),
                        onHandleSpace: (ve) => Mn(ve, !lt.value(q)),
                        onSetHoverDate: W[1] || (W[1] = (ve) => M(ee)(ve)),
                        onHandleScroll: (ve) => M(D)(ve, q),
                        onHandleSwipe: (ve) => M(Q)(ve, q),
                        onMount: W[2] || (W[2] = (ve) => Bt("calendar")),
                        onResetFlow: _,
                        onTooltipOpen: W[3] || (W[3] = (ve) => h.$emit("tooltip-open", ve)),
                        onTooltipClose: W[4] || (W[4] = (ve) => h.$emit("tooltip-close", ve))
                      }), Le({ _: 2 }, [
                        Ce(M(Xe), (ve, ra) => ({
                          name: ve,
                          fn: ie((Xt) => [
                            K(h.$slots, ve, Re(xe({ ...Xt })))
                          ])
                        }))
                      ]), 1040, ["specific-mode", "get-week-num", "instance", "mapped-dates", "month", "year", "onSelectDate", "onHandleSpace", "onHandleScroll", "onHandleSwipe"])
                    ], 2))), 128))
                  ], 2),
                  oe("div", null, [
                    h.$slots["time-picker"] ? K(h.$slots, "time-picker", Re(Pe({ key: 0 }, { time: M($), updateTime: M(m) }))) : (p(), I(ye, { key: 1 }, [
                      h.enableTimePicker && !h.monthPicker && !h.weekPicker ? (p(), me(nr, Pe({
                        key: 0,
                        ref_key: "timePickerRef",
                        ref: x,
                        hours: M($).hours,
                        minutes: M($).minutes,
                        seconds: M($).seconds,
                        "internal-model-value": e.internalModelValue
                      }, u.value, {
                        onMount: W[5] || (W[5] = (q) => Bt("timePicker")),
                        "onUpdate:hours": W[6] || (W[6] = (q) => M(m)(q)),
                        "onUpdate:minutes": W[7] || (W[7] = (q) => M(m)(q, !1)),
                        "onUpdate:seconds": W[8] || (W[8] = (q) => M(m)(q, !1, !0)),
                        onResetFlow: _,
                        onOverlayClosed: $e,
                        onOverlayOpened: W[9] || (W[9] = (q) => h.$emit("time-picker-open", q)),
                        onAmPmChange: W[10] || (W[10] = (q) => h.$emit("am-pm-change", q))
                      }), Le({ _: 2 }, [
                        Ce(M(Se), (q, Qe) => ({
                          name: q,
                          fn: ie((ve) => [
                            K(h.$slots, q, Re(xe(ve)))
                          ])
                        }))
                      ]), 1040, ["hours", "minutes", "seconds", "internal-model-value"])) : A("", !0)
                    ], 64))
                  ])
                ], 512),
                h.$slots["right-sidebar"] ? (p(), I("div", ur, [
                  K(h.$slots, "right-sidebar", Re(xe(ne)))
                ])) : A("", !0),
                h.$slots["action-extra"] ? (p(), I("div", ir, [
                  h.$slots["action-extra"] ? K(h.$slots, "action-extra", {
                    key: 0,
                    selectCurrentDate: M(o)
                  }) : A("", !0)
                ])) : A("", !0)
              ], 2),
              !h.autoApply || h.keepActionRow ? (p(), me($l, Pe({
                key: 2,
                "menu-mount": U.value,
                "calendar-width": Y.value,
                "internal-model-value": e.internalModelValue
              }, u.value, {
                onClosePicker: W[11] || (W[11] = (q) => h.$emit("close-picker")),
                onSelectDate: W[12] || (W[12] = (q) => h.$emit("select-date")),
                onInvalidSelect: W[13] || (W[13] = (q) => h.$emit("invalid-select")),
                onSelectNow: M(o)
              }), Le({ _: 2 }, [
                Ce(M(Ee), (q, Qe) => ({
                  name: q,
                  fn: ie((ve) => [
                    K(h.$slots, q, Re(xe({ ...ve })))
                  ])
                }))
              ]), 1040, ["menu-mount", "calendar-width", "internal-model-value", "onSelectNow"])) : A("", !0)
            ], 42, lr)
          ];
        }),
        _: 3
      }, 8, ["name", "css"]);
    };
  }
}), cr = typeof window < "u" ? window : void 0, un = () => {
}, fr = (e) => sa() ? (ua(e), !0) : !1, vr = (e, n, a, t) => {
  if (!e)
    return un;
  let u = un;
  const c = ut(
    () => M(e),
    (N) => {
      u(), N && (N.addEventListener(n, a, t), u = () => {
        N.removeEventListener(n, a, t), u = un;
      });
    },
    { immediate: !0, flush: "post" }
  ), y = () => {
    c(), u();
  };
  return fr(y), y;
}, mr = (e, n, a, t = {}) => {
  const { window: u = cr, event: c = "pointerdown" } = t;
  return u ? vr(u, c, (N) => {
    const V = Me(e), P = Me(n);
    !V || !P || V === N.target || N.composedPath().includes(V) || N.composedPath().includes(P) || a(N);
  }, { passive: !0 }) : void 0;
}, yr = /* @__PURE__ */ je({
  __name: "VueDatePicker",
  props: {
    ...dt
  },
  emits: [
    "update:model-value",
    "text-submit",
    "closed",
    "cleared",
    "open",
    "focus",
    "blur",
    "internal-model-change",
    "recalculate-position",
    "flow-step",
    "update-month-year",
    "invalid-select",
    "invalid-fixed-range",
    "tooltip-open",
    "tooltip-close",
    "time-picker-open",
    "time-picker-close",
    "am-pm-change",
    "range-start",
    "range-end"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, u = pn(), c = H(!1), y = Ct(t, "modelValue"), N = Ct(t, "timezone"), V = H(null), P = H(null), F = H(!1), C = H(null), { setMenuFocused: d, setShiftKey: k } = Qn(), { clearArrowNav: J } = it(), { validateDate: x, isValidTime: z, defaults: Y } = Fe(t);
    We(() => {
      b(t.modelValue), t.inline || (ce(C.value).addEventListener("scroll", r), window.addEventListener("resize", l)), t.inline && (c.value = !0);
    }), hn(() => {
      if (!t.inline) {
        const X = ce(C.value);
        X && X.removeEventListener("scroll", r), window.removeEventListener("resize", l);
      }
    });
    const U = yt(u, "all", t.presetRanges), O = yt(u, "input");
    ut(
      [y, N],
      () => {
        b(y.value);
      },
      { deep: !0 }
    );
    const { openOnTop: G, menuStyle: j, resetPosition: le, setMenuPosition: se, setInitialPosition: ue, getScrollableParent: ce } = fl(V, P, a, t), {
      inputValue: fe,
      internalModelValue: _,
      parseExternalModelValue: b,
      emitModelValue: f,
      formatInputValue: R,
      checkBeforeEmit: B
    } = dl(a, t, F), $ = L(
      () => ({
        dp__main: !0,
        dp__theme_dark: t.dark,
        dp__theme_light: !t.dark,
        dp__flex_display: t.inline,
        dp__flex_display_with_input: t.inlineWithInput
      })
    ), m = L(() => t.dark ? "dp__theme_dark" : "dp__theme_light"), i = L(() => t.teleport ? {
      to: typeof t.teleport == "boolean" ? "body" : t.teleport,
      disabled: t.inline
    } : { class: "dp__outer_menu_wrap" }), r = () => {
      c.value && (t.closeOnScroll ? ke() : se());
    }, l = () => {
      c.value && se();
    }, g = async () => {
      var X, re, te;
      !t.disabled && !t.readonly && (le(), await at(), c.value = !0, await at(), ue(), await at(), se(), delete j.value.opacity, (X = Y.value.transitions) != null && X.menuAppear || (te = (re = V.value) == null ? void 0 : re.$el) == null || te.classList.add("dp__menu_transitioned"), c.value && a("open"), c.value || ee(), b(t.modelValue));
    }, D = () => {
      fe.value = "", ee(), a("update:model-value", null), a("cleared"), t.closeOnClearValue && ke();
    }, S = () => {
      const X = _.value;
      return !X || !Array.isArray(X) && x(X) ? !0 : Array.isArray(X) ? X.length === 2 && x(X[0]) && x(X[1]) ? !0 : x(X[0]) : !1;
    }, Q = () => {
      B() && S() ? (f(), ke()) : a("invalid-select", _.value);
    }, v = (X) => {
      o(), f(), t.closeOnAutoApply && !X && ke();
    }, o = () => {
      P.value && t.textInput && P.value.setParsedDate(_.value);
    }, E = (X = !1) => {
      t.autoApply && z(_.value) && S() && (t.range && Array.isArray(_.value) ? (t.partialRange || _.value.length === 2) && v(X) : v(X));
    }, ee = () => {
      t.textInput || (_.value = null);
    }, ke = () => {
      t.inline || (c.value && (c.value = !1, d(!1), k(!1), J(), a("closed"), ue(), fe.value && b(y.value)), ee());
    }, He = (X, re) => {
      if (!X) {
        _.value = null;
        return;
      }
      _.value = X, re && (Q(), a("text-submit"));
    }, qe = () => {
      t.autoApply && z(_.value) && f(), o();
    }, ne = () => c.value ? ke() : g(), Xe = (X) => {
      _.value = X;
    }, Ee = () => {
      t.textInput && (F.value = !0, R()), a("focus");
    }, Se = () => {
      t.textInput && (F.value = !1, b(t.modelValue)), a("blur");
    }, Je = (X) => {
      V.value && V.value.updateMonthYear(0, {
        month: Ln(X.month),
        year: Ln(X.year)
      });
    }, bt = (X) => {
      b(X || t.modelValue);
    }, Dt = (X, re) => {
      var te;
      (te = V.value) == null || te.switchView(X, re);
    };
    return mr(
      V,
      P,
      t.onClickOutside ? () => t.onClickOutside(S) : ke
    ), n({
      closeMenu: ke,
      selectDate: Q,
      clearValue: D,
      openMenu: g,
      onScroll: r,
      formatInputValue: R,
      // exposed for testing purposes
      updateInternalModelValue: Xe,
      // modify internal modelValue
      setMonthYear: Je,
      parseModel: bt,
      switchView: Dt
    }), (X, re) => (p(), I("div", {
      class: he($.value),
      ref_key: "pickerWrapperRef",
      ref: C
    }, [
      gt(kl, Pe({
        ref_key: "inputRef",
        ref: P,
        "is-menu-open": c.value,
        "input-value": M(fe),
        "onUpdate:inputValue": re[0] || (re[0] = (te) => Tn(fe) ? fe.value = te : null)
      }, X.$props, {
        onClear: D,
        onOpen: g,
        onSetInputDate: He,
        onSetEmptyDate: M(f),
        onSelectDate: Q,
        onToggle: ne,
        onClose: ke,
        onFocus: Ee,
        onBlur: Se,
        onRealBlur: re[1] || (re[1] = (te) => F.value = !1)
      }), Le({ _: 2 }, [
        Ce(M(O), (te, ht) => ({
          name: te,
          fn: ie((lt) => [
            K(X.$slots, te, Re(xe(lt)))
          ])
        }))
      ]), 1040, ["is-menu-open", "input-value", "onSetEmptyDate"]),
      c.value ? (p(), me(xn(X.teleport ? ia : "div"), Re(Pe({ key: 0 }, i.value)), {
        default: ie(() => [
          c.value ? (p(), me(dr, Pe({
            key: 0,
            ref_key: "dpMenuRef",
            ref: V,
            class: m.value,
            style: X.inline ? void 0 : M(j),
            "open-on-top": M(G)
          }, X.$props, {
            "internal-model-value": M(_),
            "onUpdate:internalModelValue": re[2] || (re[2] = (te) => Tn(_) ? _.value = te : null),
            onClosePicker: ke,
            onSelectDate: Q,
            onAutoApply: E,
            onTimeUpdate: qe,
            onFlowStep: re[3] || (re[3] = (te) => X.$emit("flow-step", te)),
            onUpdateMonthYear: re[4] || (re[4] = (te) => X.$emit("update-month-year", te)),
            onInvalidSelect: re[5] || (re[5] = (te) => X.$emit("invalid-select", M(_))),
            onInvalidFixedRange: re[6] || (re[6] = (te) => X.$emit("invalid-fixed-range", te)),
            onRecalculatePosition: M(se),
            onTooltipOpen: re[7] || (re[7] = (te) => X.$emit("tooltip-open", te)),
            onTooltipClose: re[8] || (re[8] = (te) => X.$emit("tooltip-close", te)),
            onTimePickerOpen: re[9] || (re[9] = (te) => X.$emit("time-picker-open", te)),
            onTimePickerClose: re[10] || (re[10] = (te) => X.$emit("time-picker-close", te)),
            onAmPmChange: re[11] || (re[11] = (te) => X.$emit("am-pm-change", te)),
            onRangeStart: re[12] || (re[12] = (te) => X.$emit("range-start", te)),
            onRangeEnd: re[13] || (re[13] = (te) => X.$emit("range-end", te))
          }), Le({ _: 2 }, [
            Ce(M(U), (te, ht) => ({
              name: te,
              fn: ie((lt) => [
                K(X.$slots, te, Re(xe({ ...lt })))
              ])
            }))
          ]), 1040, ["class", "style", "open-on-top", "internal-model-value", "onRecalculatePosition"])) : A("", !0)
        ]),
        _: 3
      }, 16)) : A("", !0)
    ], 2));
  }
}), la = /* @__PURE__ */ (() => {
  const e = yr;
  return e.install = (n) => {
    n.component("Vue3DatePicker", e);
  }, e;
})(), gr = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: la
}, Symbol.toStringTag, { value: "Module" }));
Object.entries(gr).forEach(([e, n]) => {
  e !== "default" && (la[e] = n);
});
export {
  la as default
};
